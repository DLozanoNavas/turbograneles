// <auto-generated/>
#pragma warning disable CS0618
using Italcol.TurboGraneles.Clients.Api.V1.Logs.Handlers;
using Italcol.TurboGraneles.Clients.Api.V1.Logs.Services;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Italcol.TurboGraneles.Clients.Api.V1.Logs
{
    /// <summary>
    /// Builds and executes requests for operations under \api\v1\logs
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class LogsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The handlers property</summary>
        public global::Italcol.TurboGraneles.Clients.Api.V1.Logs.Handlers.HandlersRequestBuilder Handlers
        {
            get => new global::Italcol.TurboGraneles.Clients.Api.V1.Logs.Handlers.HandlersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The services property</summary>
        public global::Italcol.TurboGraneles.Clients.Api.V1.Logs.Services.ServicesRequestBuilder Services
        {
            get => new global::Italcol.TurboGraneles.Clients.Api.V1.Logs.Services.ServicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public LogsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v1/logs?dateFrom={dateFrom}&dateTo={dateTo}&handlerName={handlerName}&isCronJob={isCronJob}&limit={limit}&page={page}&service={service}&uniqueRequestId={uniqueRequestId}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public LogsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/v1/logs?dateFrom={dateFrom}&dateTo={dateTo}&handlerName={handlerName}&isCronJob={isCronJob}&limit={limit}&page={page}&service={service}&uniqueRequestId={uniqueRequestId}", rawUrl)
        {
        }
        /// <returns>A <see cref="Stream"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Stream?> GetAsync(Action<RequestConfiguration<global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder.LogsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Stream> GetAsync(Action<RequestConfiguration<global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder.LogsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendPrimitiveAsync<Stream>(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder.LogsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder.LogsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        #pragma warning disable CS1591
        public partial class LogsRequestBuilderGetQueryParameters 
        #pragma warning restore CS1591
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateFrom")]
            public string? DateFrom { get; set; }
#nullable restore
#else
            [QueryParameter("dateFrom")]
            public string DateFrom { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("dateTo")]
            public string? DateTo { get; set; }
#nullable restore
#else
            [QueryParameter("dateTo")]
            public string DateTo { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("handlerName")]
            public string? HandlerName { get; set; }
#nullable restore
#else
            [QueryParameter("handlerName")]
            public string HandlerName { get; set; }
#endif
            [QueryParameter("isCronJob")]
            public bool? IsCronJob { get; set; }
            [QueryParameter("limit")]
            public double? Limit { get; set; }
            [QueryParameter("page")]
            public double? Page { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("service")]
            public string? Service { get; set; }
#nullable restore
#else
            [QueryParameter("service")]
            public string Service { get; set; }
#endif
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("uniqueRequestId")]
            public string? UniqueRequestId { get; set; }
#nullable restore
#else
            [QueryParameter("uniqueRequestId")]
            public string UniqueRequestId { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class LogsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Italcol.TurboGraneles.Clients.Api.V1.Logs.LogsRequestBuilder.LogsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618

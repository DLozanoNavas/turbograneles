// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Italcol.TurboGraneles.Clients.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SendStuffedContainersResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Result</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<UntypedNode>? Data { get; set; }
#nullable restore
#else
        public List<UntypedNode> Data { get; set; }
#endif
        /// <summary>Local time in Colombia</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocalTime { get; set; }
#nullable restore
#else
        public string LocalTime { get; set; }
#endif
        /// <summary>A message describing the result of the operation</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Message { get; set; }
#nullable restore
#else
        public string Message { get; set; }
#endif
        /// <summary>HTTP status code of the response</summary>
        public double? StatusCode { get; set; }
        /// <summary>Indicates if the operation was successful</summary>
        public bool? Success { get; set; }
        /// <summary>ISO 8601 timestamp of the response</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timestamp { get; set; }
#nullable restore
#else
        public string Timestamp { get; set; }
#endif
        /// <summary>Unique identifier for the request</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UniqueRequestId { get; set; }
#nullable restore
#else
        public string UniqueRequestId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Italcol.TurboGraneles.Clients.Models.SendStuffedContainersResponse"/> and sets the default values.
        /// </summary>
        public SendStuffedContainersResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Italcol.TurboGraneles.Clients.Models.SendStuffedContainersResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Italcol.TurboGraneles.Clients.Models.SendStuffedContainersResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Italcol.TurboGraneles.Clients.Models.SendStuffedContainersResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "data", n => { Data = n.GetCollectionOfPrimitiveValues<UntypedNode>()?.AsList(); } },
                { "localTime", n => { LocalTime = n.GetStringValue(); } },
                { "message", n => { Message = n.GetStringValue(); } },
                { "statusCode", n => { StatusCode = n.GetDoubleValue(); } },
                { "success", n => { Success = n.GetBoolValue(); } },
                { "timestamp", n => { Timestamp = n.GetStringValue(); } },
                { "uniqueRequestId", n => { UniqueRequestId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<UntypedNode>("data", Data);
            writer.WriteStringValue("localTime", LocalTime);
            writer.WriteStringValue("message", Message);
            writer.WriteDoubleValue("statusCode", StatusCode);
            writer.WriteBoolValue("success", Success);
            writer.WriteStringValue("timestamp", Timestamp);
            writer.WriteStringValue("uniqueRequestId", UniqueRequestId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

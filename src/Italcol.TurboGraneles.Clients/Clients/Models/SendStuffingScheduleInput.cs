// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Italcol.TurboGraneles.Clients.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SendStuffingScheduleInput : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Boarding place code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BoardingPlaceCode { get; set; }
#nullable restore
#else
        public string BoardingPlaceCode { get; set; }
#endif
        /// <summary>Consecutive stuffing</summary>
        public double? ConsecutiveStuffing { get; set; }
        /// <summary>Date and time of inspection</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateTimeInspection { get; set; }
#nullable restore
#else
        public string DateTimeInspection { get; set; }
#endif
        /// <summary>Inspection place code</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InspectionPlaceCode { get; set; }
#nullable restore
#else
        public string InspectionPlaceCode { get; set; }
#endif
        /// <summary>Operation type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OperationType { get; set; }
#nullable restore
#else
        public string OperationType { get; set; }
#endif
        /// <summary>Programming date</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProgrammingDate { get; set; }
#nullable restore
#else
        public string ProgrammingDate { get; set; }
#endif
        /// <summary>Programming number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProgrammingNbr { get; set; }
#nullable restore
#else
        public string ProgrammingNbr { get; set; }
#endif
        /// <summary>Programming time</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProgrammingTime { get; set; }
#nullable restore
#else
        public string ProgrammingTime { get; set; }
#endif
        /// <summary>Reschedule flag</summary>
        public global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput_reschedule? Reschedule { get; set; }
        /// <summary>Update flag</summary>
        public global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput_update? Update { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput"/> and sets the default values.
        /// </summary>
        public SendStuffingScheduleInput()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "boardingPlaceCode", n => { BoardingPlaceCode = n.GetStringValue(); } },
                { "consecutiveStuffing", n => { ConsecutiveStuffing = n.GetDoubleValue(); } },
                { "dateTimeInspection", n => { DateTimeInspection = n.GetStringValue(); } },
                { "inspectionPlaceCode", n => { InspectionPlaceCode = n.GetStringValue(); } },
                { "operationType", n => { OperationType = n.GetStringValue(); } },
                { "programmingDate", n => { ProgrammingDate = n.GetStringValue(); } },
                { "programmingNbr", n => { ProgrammingNbr = n.GetStringValue(); } },
                { "programmingTime", n => { ProgrammingTime = n.GetStringValue(); } },
                { "reschedule", n => { Reschedule = n.GetEnumValue<global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput_reschedule>(); } },
                { "update", n => { Update = n.GetEnumValue<global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput_update>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("boardingPlaceCode", BoardingPlaceCode);
            writer.WriteDoubleValue("consecutiveStuffing", ConsecutiveStuffing);
            writer.WriteStringValue("dateTimeInspection", DateTimeInspection);
            writer.WriteStringValue("inspectionPlaceCode", InspectionPlaceCode);
            writer.WriteStringValue("operationType", OperationType);
            writer.WriteStringValue("programmingDate", ProgrammingDate);
            writer.WriteStringValue("programmingNbr", ProgrammingNbr);
            writer.WriteStringValue("programmingTime", ProgrammingTime);
            writer.WriteEnumValue<global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput_reschedule>("reschedule", Reschedule);
            writer.WriteEnumValue<global::Italcol.TurboGraneles.Clients.Models.SendStuffingScheduleInput_update>("update", Update);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

// <auto-generated/>
#pragma warning disable CS0618
using Italcol.TurboGraneles.Clients.AccessControl;
using Italcol.TurboGraneles.Clients.Api;
using Italcol.TurboGraneles.Clients.Health;
using Italcol.TurboGraneles.Clients.Oauth2;
using Italcol.TurboGraneles.Clients.Scanner;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Italcol.TurboGraneles.Clients
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TurboGranelesClient : BaseRequestBuilder
    {
        /// <summary>The accessControl property</summary>
        public global::Italcol.TurboGraneles.Clients.AccessControl.AccessControlRequestBuilder AccessControl
        {
            get => new global::Italcol.TurboGraneles.Clients.AccessControl.AccessControlRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The api property</summary>
        public global::Italcol.TurboGraneles.Clients.Api.ApiRequestBuilder Api
        {
            get => new global::Italcol.TurboGraneles.Clients.Api.ApiRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The health property</summary>
        public global::Italcol.TurboGraneles.Clients.Health.HealthRequestBuilder Health
        {
            get => new global::Italcol.TurboGraneles.Clients.Health.HealthRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The oauth2 property</summary>
        public global::Italcol.TurboGraneles.Clients.Oauth2.Oauth2RequestBuilder Oauth2
        {
            get => new global::Italcol.TurboGraneles.Clients.Oauth2.Oauth2RequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The scanner property</summary>
        public global::Italcol.TurboGraneles.Clients.Scanner.ScannerRequestBuilder Scanner
        {
            get => new global::Italcol.TurboGraneles.Clients.Scanner.ScannerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Italcol.TurboGraneles.Clients.TurboGranelesClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TurboGranelesClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
        }
        /// <returns>A <see cref="Stream"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Stream?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Stream> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendPrimitiveAsync<Stream>(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            return requestInfo;
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TurboGranelesClientGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618

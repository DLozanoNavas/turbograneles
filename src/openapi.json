{
    "openapi": "3.0.0",
    "paths": {
        "/": {
            "get": {
                "operationId": "getHealthVuce",
                "summary": "",
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/health": {
            "get": {
                "operationId": "getHealth",
                "summary": "Health check",
                "description": "Check the health of the super financiera service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Access Control"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/access-control/verify-social": {
            "post": {
                "operationId": "verifyIDSocial",
                "summary": "Validate ID",
                "description": "Validates a user ID based on the provided cedula.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Body containing cedula to validate",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyIDSocialBody"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Access Control"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/logs/services": {
            "get": {
                "operationId": "getAllServices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/logs/handlers": {
            "get": {
                "operationId": "getAllHandlers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/logs": {
            "get": {
                "operationId": "getLogs",
                "parameters": [
                    {
                        "name": "page",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "service",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "handlerName",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "uniqueRequestId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isCronJob",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "dateFrom",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateTo",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the email service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Email"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email/templates": {
            "post": {
                "operationId": "createTemplate",
                "summary": "Create a new email template",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            },
            "get": {
                "operationId": "getTemplates",
                "summary": "Get all active email templates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email/templates/{id}": {
            "put": {
                "operationId": "updateTemplate",
                "summary": "Update an existing email template",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            },
            "delete": {
                "operationId": "deleteTemplate",
                "summary": "Delete an email template",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email/send": {
            "post": {
                "operationId": "sendEmail",
                "summary": "Send an email using a template",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email-groups/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the super financiera service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email-groups": {
            "post": {
                "operationId": "createGroup",
                "summary": "Create a new email group",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEmailGroupDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            },
            "get": {
                "operationId": "getGroups",
                "summary": "Get all active email groups",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email-groups/{id}": {
            "put": {
                "operationId": "updateGroup",
                "summary": "Update an existing email group",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEmailGroupDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            },
            "delete": {
                "operationId": "deleteGroup",
                "summary": "Delete an email group",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email-groups/send/{groupId}": {
            "post": {
                "operationId": "sendEmailToGroup",
                "summary": "Send an email to all members of a group",
                "parameters": [
                    {
                        "name": "groupId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email-groups/processes": {
            "get": {
                "operationId": "getAvailableProcesses",
                "summary": "Get available processes for email groups",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/email-groups/send/process-state": {
            "post": {
                "operationId": "sendEmailByProcessAndState",
                "summary": "Enviar correos por proceso y estado",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Email Groups"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/jobs/process": {
            "get": {
                "operationId": "processJobs",
                "summary": "Process pending jobs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/jobs/endpoints": {
            "get": {
                "operationId": "getAllEndpoints",
                "summary": "Get all endpoints",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/jobs/statuses": {
            "get": {
                "operationId": "getAllStatuses",
                "summary": "Get all statuses",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/jobs/jobs": {
            "get": {
                "operationId": "getAllJobs",
                "summary": "Get all jobs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/oauth2/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the oAuth 2.0 service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "oAuth2 Authentication"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/oauth2/token": {
            "post": {
                "operationId": "getToken",
                "summary": "Get OAuth2 Token",
                "description": "Obtains an access token using OAuth2 password grant type",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OAuth2CredentialsDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Token successfully generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "oAuth2 Authentication"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/auth": {
            "post": {
                "operationId": "auth",
                "summary": "User authentication",
                "security": [],
                "description": "Sign in with email/password to get access token",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/api/v1/auth/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "",
                "security": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/api/v1/cafeteros/weighing-to-sap": {
            "post": {
                "operationId": "weighingToSap",
                "summary": "Send weighing data to SAP",
                "description": "Processes weighing information and sends it to SAP system",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Weighing data to SAP input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestPayloadDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with weighing data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseType"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cafeteros"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/cafeteros/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Cafeteros"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/finalize-vessel": {
            "post": {
                "operationId": "finalizeVessel",
                "summary": "Finalize Vessel",
                "description": "Endpoint used to report vessel finalization",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Data needed to report vessel finalization",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TosFinalizeVesselRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TosFinalizeVesselResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/consult-manifest/{manifiesto}": {
            "get": {
                "operationId": "consultManifest",
                "summary": "Consult Manifest",
                "description": "Endpoint to consult manifest data for a given ID",
                "parameters": [
                    {
                        "name": "manifiesto",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/report-tarja": {
            "post": {
                "operationId": "reportTarja",
                "summary": "Report Tarja",
                "description": "This endpoint reports cargo details using Tarja and manifest data",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "The detailed report payload containing cargo units, empty containers, and manifest information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DinformeDetallesCargarecibidaDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The cargo report has been successfully submitted."
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/import-declaration": {
            "get": {
                "operationId": "getImportDeclaration",
                "summary": "Import Declaration",
                "description": "Endpoint to get import declaration data",
                "parameters": [
                    {
                        "name": "numDeclaration",
                        "required": true,
                        "in": "query",
                        "description": "numDeclaration",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import declaration data retrieved successfully"
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/jobs/start-dian-job": {
            "get": {
                "operationId": "startDianJob",
                "summary": "Start DIAN Job",
                "description": "Initiate the DIAN job to process and send BLs",
                "parameters": [
                    {
                        "name": "X-Mock-Mode",
                        "required": false,
                        "in": "header",
                        "description": "Enable mock mode for testing (true/false)",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The DIAN job has started successfully"
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/send-arim": {
            "post": {
                "operationId": "sendArim",
                "summary": "Send ARIM",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestArimCargoFromTosDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Arim data retrieved successfully"
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/entry-notice": {
            "post": {
                "operationId": "processEntryNotice",
                "summary": "Entry Notice",
                "description": "Endpoint used to report \"entry notice\"",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Data needed to report \"entry notice\"",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeEntryNoticeDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TosFinalizeVesselResponseDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/dian/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "DIAN"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/convert-json-to-xml": {
            "post": {
                "operationId": "transformJSONToXML",
                "summary": "Convert information of json in xml",
                "description": "Convert information of electronic invoice request from json to xml",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Container update information",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FacturaONotaCreditoDto"
                            },
                            "examples": {
                                "input": {
                                    "value": {
                                        "Cabecera": {
                                            "Numero": "FAV50030",
                                            "OrdenCompra": "OC37987",
                                            "FechaOrdenCompra": "2020-06-04",
                                            "FechaEmision": "2020-06-05",
                                            "Vencimiento": "2020-06-05",
                                            "HoraEmision": "09:10:00",
                                            "MonedaFactura": "COP",
                                            "Observaciones": "Observaciones documento",
                                            "TipoFactura": "01",
                                            "FormaDePago": "1",
                                            "LineasDeFactura": 1,
                                            "TipoOperacion": "10",
                                            "SubTipoOperacion": null,
                                            "FormatoContingencia": null,
                                            "OrdenCompraVendedor": null,
                                            "NitFabricanteSoftware": null,
                                            "RazonSocialFabricanteSoftware": null,
                                            "NombreSoftware": null,
                                            "Ambiente": "1",
                                            "LineaDeNegocio": null
                                        },
                                        "ObservacionesAdicionales": {
                                            "Observaciones": [
                                                "otras observaciones para el documento",
                                                "otras observaciones para el documento...."
                                            ]
                                        },
                                        "Item": [
                                            {
                                                "Codigo": "001",
                                                "Nombre": "Producto 1",
                                                "Cantidad": 10,
                                                "ValorUnitario": 10000,
                                                "ValorTotal": 100000,
                                                "Descuento": 0,
                                                "Impuesto": 0,
                                                "ValorUnitarioConImpuesto": 10000,
                                                "ValorTotalConImpuesto": 100000
                                            },
                                            {
                                                "Codigo": "002",
                                                "Nombre": "Producto 2",
                                                "Cantidad": 5,
                                                "ValorUnitario": 20000,
                                                "ValorTotal": 100000,
                                                "Descuento": 0,
                                                "Impuesto": 0,
                                                "ValorUnitarioConImpuesto": 20000,
                                                "ValorTotalConImpuesto": 100000
                                            }
                                        ],
                                        "Totales": {
                                            "ValorTotalFactura": 200000,
                                            "ValorTotalImpuestos": 0,
                                            "ValorTotalNeto": 200000,
                                            "ValorTotalDescuentos": 0
                                        },
                                        "NumeracionDIAN": {
                                            "NumeroResolucion": "12345",
                                            "FechaInicio": "2020-01-01",
                                            "FechaFin": "2021-12-31",
                                            "PrefijoNumeracion": "FAV",
                                            "ConsecutivoInicial": 50000,
                                            "ConsecutivoFinal": 60000
                                        },
                                        "DocumentosAdicionalesReferencia": [
                                            {
                                                "Numero": "DOC001",
                                                "FechaEmision": "2020-06-01",
                                                "TipoDocumento": "01",
                                                "IDUnicoDocumento": "CUFE123456789",
                                                "IDEsquema": "DIAN",
                                                "UrlAdjunto": "http://example.com/attachment.pdf"
                                            }
                                        ],
                                        "Adicional": {
                                            "Anexos": [
                                                "Anexo 1",
                                                "Anexo 2"
                                            ],
                                            "Observaciones": "Observaciones adicionales"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/login-request": {
            "post": {
                "operationId": "loginRequest",
                "summary": "Login request",
                "description": "Performs a login request to the specified endpoint.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/send-invoice": {
            "post": {
                "operationId": "sendInvoice",
                "summary": "Send invoice",
                "description": "Sends the invoice to the specified SOAP endpoint.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Invoice XML data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "input": {
                                    "value": "\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Factura>\n  <Cabecera>\n    <Numero>FAV50030</Numero>\n    <OrdenCompra>OC37987</OrdenCompra>\n    <FechaOrdenCompra>2020-06-04</FechaOrdenCompra>\n    <FechaEmision>2020-06-05</FechaEmision>\n    <Vencimiento>2020-06-05</Vencimiento>\n    <HoraEmision>09:10:00</HoraEmision>\n    <MonedaFactura>COP</MonedaFactura>\n    <Observaciones>Observaciones documento</Observaciones>\n    <TipoFactura>01</TipoFactura>\n    <FormaDePago>1</FormaDePago>\n    <LineasDeFactura>1</LineasDeFactura>\n    <TipoOperacion>10</TipoOperacion>\n    <SubTipoOperacion/>\n    <FormatoContingencia/>\n    <OrdenCompraVendedor/>\n    <NitFabricanteSoftware/>\n    <RazonSocialFabricanteSoftware/>\n    <NombreSoftware/>\n    <Ambiente>1</Ambiente>\n    <LineaDeNegocio/>\n  </Cabecera>\n  <ObservacionesAdicionales>\n    <Observaciones>otras observaciones para el documento</Observaciones>\n    <Observaciones>otras observaciones para el documento....</Observaciones>\n  </ObservacionesAdicionales>\n  <Item>\n    <Codigo>001</Codigo>\n    <Nombre>Producto 1</Nombre>\n    <Cantidad>10</Cantidad>\n    <ValorUnitario>10000</ValorUnitario>\n    <ValorTotal>100000</ValorTotal>\n    <Descuento>0</Descuento>\n    <Impuesto>0</Impuesto>\n    <ValorUnitarioConImpuesto>10000</ValorUnitarioConImpuesto>\n    <ValorTotalConImpuesto>100000</ValorTotalConImpuesto>\n  </Item>\n</Factura>\n"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/send-electronic-invoice": {
            "post": {
                "operationId": "sendElectronicInvoice",
                "summary": "Send Electronic Invoice",
                "description": "Sends an electronic invoice to the specified endpoint.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Electronic Invoice information to be sent",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendInvoiceDto"
                            },
                            "examples": {
                                "input": {
                                    "value": {
                                        "isSuccess": true,
                                        "requestId": "invoice-request-id-12345",
                                        "UUID": "cufe-unique-code-1234567890abcdef",
                                        "documentNumber": "INV-001234",
                                        "LDF": "FACTURA-UBL(123456789;INV-001234;2024-09-28;PRINCIPAL;PRINCIPAL)",
                                        "URL": "https://example.com/invoice/viewer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/erp-autenticate": {
            "post": {
                "operationId": "loginIFS",
                "summary": "Login with erp",
                "description": "Login with erp.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Invoice created successfully"
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/erp-create-invoice": {
            "post": {
                "operationId": "createInvoice",
                "summary": "Create Invoice",
                "description": "Creates an invoice using the external API after authentication.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Invoice creation request data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "multipleFacture": {
                                    "value": {
                                        "Input": {
                                            "LineType": "H",
                                            "CustIdentity": "CT0001",
                                            "InvoiceNo": "M_INV_001",
                                            "TransactionDate": "2024-10-01",
                                            "InvoiceType": "EXTINV",
                                            "InvoiceDate": "2024-10-01",
                                            "DueDate": "2024-10-15",
                                            "PayTermId": "0",
                                            "Currency": "COP",
                                            "CurrRate": 1,
                                            "VoucherType": "F",
                                            "CreatorsReference": "N4BILLING",
                                            "PayTermBaseDate": "2024-10-01",
                                            "DeliveryDate": "2024-10-02",
                                            "CustomerReference": "Ref_001",
                                            "Lines": [
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 1,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": 500000,
                                                    "VatCurrAmount": 95000,
                                                    "Reference": "Item_001",
                                                    "IncomeTypeId": "4"
                                                },
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 2,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": 500000,
                                                    "VatCurrAmount": 95000,
                                                    "Reference": "Item_001",
                                                    "IncomeTypeId": "4"
                                                },
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 3,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": 500000,
                                                    "VatCurrAmount": 95000,
                                                    "Reference": "Item_001",
                                                    "IncomeTypeId": "4"
                                                }
                                            ],
                                            "Postings": [
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 1,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": -500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                },
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 2,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": -500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                },
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 3,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": -500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                }
                                            ],
                                            "Taxes": [
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 1,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": 95000,
                                                    "TaxDomAmount": 95000,
                                                    "FeeCode": "VAT19"
                                                },
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 2,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": 95000,
                                                    "TaxDomAmount": 95000,
                                                    "FeeCode": "VAT19"
                                                },
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "M_INV_001",
                                                    "ItemId": 3,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": 95000,
                                                    "TaxDomAmount": 95000,
                                                    "FeeCode": "VAT19"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "facture": {
                                    "value": {
                                        "Input": {
                                            "LineType": "H",
                                            "CustIdentity": "CT0001",
                                            "InvoiceNo": "INV_001",
                                            "TransactionDate": "2024-10-01",
                                            "InvoiceType": "EXTINV",
                                            "InvoiceDate": "2024-10-01",
                                            "DueDate": "2024-10-15",
                                            "PayTermId": "0",
                                            "Currency": "COP",
                                            "CurrRate": 1,
                                            "VoucherType": "F",
                                            "CreatorsReference": "N4BILLING",
                                            "PayTermBaseDate": "2024-10-01",
                                            "DeliveryDate": "2024-10-02",
                                            "CustomerReference": "Ref_001",
                                            "Lines": [
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "INV_001",
                                                    "ItemId": 1,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": 500000,
                                                    "VatCurrAmount": 95000,
                                                    "Reference": "Item_001",
                                                    "IncomeTypeId": "4"
                                                }
                                            ],
                                            "Postings": [
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "INV_001",
                                                    "ItemId": 1,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": -500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                }
                                            ],
                                            "Taxes": [
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "INV_001",
                                                    "ItemId": 1,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": 95000,
                                                    "TaxDomAmount": 95000,
                                                    "FeeCode": "VAT19"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "credit": {
                                    "value": {
                                        "Input": {
                                            "LineType": "H",
                                            "CustIdentity": "CT0001",
                                            "InvoiceNo": "CRD_001",
                                            "TransactionDate": "2024-10-01",
                                            "InvoiceType": "EXTINV",
                                            "InvoiceDate": "2024-10-01",
                                            "DueDate": "2024-10-15",
                                            "PayTermId": "0",
                                            "Currency": "COP",
                                            "CurrRate": 1,
                                            "VoucherType": "F",
                                            "CreatorsReference": "N4BILLING",
                                            "PayTermBaseDate": "2024-10-01",
                                            "DeliveryDate": "2024-10-02",
                                            "CustomerReference": "Ref_CRD_001",
                                            "Lines": [
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "CRD_001",
                                                    "ItemId": 1,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": -500000,
                                                    "VatCurrAmount": -95000,
                                                    "Reference": "Item_CRD_001",
                                                    "IncomeTypeId": "4"
                                                }
                                            ],
                                            "Postings": [
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "CRD_001",
                                                    "ItemId": 1,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": 500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                }
                                            ],
                                            "Taxes": [
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "CRD_001",
                                                    "ItemId": 1,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": -95000,
                                                    "TaxDomAmount": -95000,
                                                    "FeeCode": "VAT19"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "multipleCredit": {
                                    "value": {
                                        "Input": {
                                            "LineType": "H",
                                            "CustIdentity": "CT0001",
                                            "InvoiceNo": "M_CRD_001",
                                            "TransactionDate": "2024-10-01",
                                            "InvoiceType": "EXTINV",
                                            "InvoiceDate": "2024-10-01",
                                            "DueDate": "2024-10-15",
                                            "PayTermId": "0",
                                            "Currency": "COP",
                                            "CurrRate": 1,
                                            "VoucherType": "F",
                                            "CreatorsReference": "N4BILLING",
                                            "PayTermBaseDate": "2024-10-01",
                                            "DeliveryDate": "2024-10-02",
                                            "CustomerReference": "Ref_CRD_001",
                                            "Lines": [
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 1,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": -500000,
                                                    "VatCurrAmount": -95000,
                                                    "Reference": "Item_CRD_001",
                                                    "IncomeTypeId": "4"
                                                },
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 2,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": -500000,
                                                    "VatCurrAmount": -95000,
                                                    "Reference": "Item_CRD_001",
                                                    "IncomeTypeId": "4"
                                                },
                                                {
                                                    "LineType": "I",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 3,
                                                    "VatCode": "VAT19",
                                                    "NetCurrAmount": -500000,
                                                    "VatCurrAmount": -95000,
                                                    "Reference": "Item_CRD_001",
                                                    "IncomeTypeId": "4"
                                                }
                                            ],
                                            "Postings": [
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 1,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": 500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                },
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 2,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": 500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                },
                                                {
                                                    "LineType": "P",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 3,
                                                    "RowId": 1,
                                                    "CodeA": "706303",
                                                    "CurrAmount": 500000,
                                                    "AutoPostingProcCode": "CUSTOM"
                                                }
                                            ],
                                            "Taxes": [
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 1,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": -95000,
                                                    "TaxDomAmount": -95000,
                                                    "FeeCode": "VAT19"
                                                },
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 2,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": -95000,
                                                    "TaxDomAmount": -95000,
                                                    "FeeCode": "VAT19"
                                                },
                                                {
                                                    "LineType": "T",
                                                    "InvoiceNo": "M_CRD_001",
                                                    "ItemId": 3,
                                                    "TaxId": 1,
                                                    "TaxCurrAmount": -95000,
                                                    "TaxDomAmount": -95000,
                                                    "FeeCode": "VAT19"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice created successfully"
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/erp-create-payment": {
            "post": {
                "operationId": "erpCreatePayment",
                "summary": "Create Payment",
                "description": "Creates a payment using the external API.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Payment creation request data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "input": {
                                    "value": {
                                        "Input": {
                                            "BankAccountNo": "13146300",
                                            "Currency": "COP",
                                            "PaymentDate": "2024-09-03",
                                            "Lines": [
                                                {
                                                    "PayRef1": "01032301",
                                                    "CustomerId": "CLT0001",
                                                    "InvoiceNo": "89897",
                                                    "Currency": "USD",
                                                    "Amount": 1190000,
                                                    "PaymentDate": "2023-09-03",
                                                    "PaymentBankRef": "010332301",
                                                    "NAVISRef": "010332301"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment created successfully"
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/tos-to-ifs": {
            "post": {
                "operationId": "tosToIFSInvoice",
                "summary": "Convert JSON invoice data to XML format",
                "description": "Receives JSON invoice data and converts it to XML format",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Invoice data in JSON format",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TosToIFSInputDto"
                            },
                            "examples": {
                                "input": {
                                    "value": {
                                        "Factura": {
                                            "Parametros": {
                                                "NcGuid": "123e4567-e89b-12d3-a456-426614174000",
                                                "Sede": "Principal",
                                                "Proceso": "Principal",
                                                "TipoDocumento": "PBCI",
                                                "Tercero": "811922921",
                                                "ClaveTecnica": "4c1254623584dc"
                                            },
                                            "Cabecera": {
                                                "TipoOperacion": "10",
                                                "SubTipoOperacion": "",
                                                "Numero": "SETT123030",
                                                "Prefijo": "SETT",
                                                "FechaEmision": "2025-03-03",
                                                "HoraEmision": "08:10:00-05:00",
                                                "Observaciones": "Observacion",
                                                "MonedaNota": "COP",
                                                "LineasDeNota": "1",
                                                "OrdenCompra": "089808hh1",
                                                "FechaOrdenCompra": "2019-03-22",
                                                "FormaDePago": "2",
                                                "Vencimiento": "2024-09-05",
                                                "OrdenCompraVendedor": "",
                                                "NitFabricanteSoftware": "",
                                                "RazonSocialFabricanteSoftware": "",
                                                "NombreSoftware": "",
                                                "Ambiente": "2",
                                                "LineaDeNegocio": ""
                                            },
                                            "ObservacionesAdicionales": [
                                                "otras observaciones para el documento",
                                                "otras observaciones para el documento...."
                                            ],
                                            "PeriodoFacturado": {
                                                "FechaInicio": "",
                                                "HoraInicio": "",
                                                "FechaFin": "",
                                                "HoraFin": ""
                                            },
                                            "ReferenciasNotas": {
                                                "ReferenciaNota": {
                                                    "FacturaAsociada": "1",
                                                    "CodigoNota": "1",
                                                    "DescripcionNota": "Factura anterior"
                                                }
                                            },
                                            "DocumentosDeDespacho": [
                                                {
                                                    "Numero": "",
                                                    "FechaEmision": ""
                                                },
                                                {
                                                    "Numero": "",
                                                    "FechaEmision": ""
                                                }
                                            ],
                                            "DocumentosDeRecibo": [
                                                {
                                                    "Numero": "",
                                                    "FechaEmision": ""
                                                },
                                                {
                                                    "Numero": "",
                                                    "FechaEmision": ""
                                                }
                                            ],
                                            "DocumentosAdicionalesReferencia": [
                                                {
                                                    "Numero": "",
                                                    "FechaEmision": "",
                                                    "TipoDocumento": "",
                                                    "UrlAdjunto": ""
                                                },
                                                {
                                                    "Numero": "",
                                                    "FechaEmision": "",
                                                    "TipoDocumento": "",
                                                    "UrlAdjunto": ""
                                                }
                                            ],
                                            "Emisor": {
                                                "TipoPersona": "1",
                                                "TipoRegimen": "48",
                                                "TipoIdentificacion": "31",
                                                "NumeroIdentificacion": "900188593",
                                                "DV": "8",
                                                "RazonSocial": "PUERTO BAHIA COLOMBIA DE URABA S.A",
                                                "NumeroMatriculaMercantil": "123456",
                                                "NombreComercial": "PUERTO BAHIA COLOMBIA DE URABA S.A",
                                                "CodigosCIIU": [
                                                    "7020",
                                                    "5140"
                                                ],
                                                "Direccion": {
                                                    "CodigoMunicipio": "13001",
                                                    "NombreCiudad": "Cartagena de Indias",
                                                    "CodigoPostal": "130001",
                                                    "NombreDepartamento": "Bolivar",
                                                    "CodigoDepartamento": "13",
                                                    "Direccion": "Calle 30 #21-164"
                                                },
                                                "DireccionesAdicionales": [
                                                    "Direccion 1",
                                                    "Direccion 2"
                                                ],
                                                "ObligacionesEmisor": [
                                                    "O-13",
                                                    "O-23"
                                                ],
                                                "DireccionFiscal": {
                                                    "CodigoMunicipio": "13001",
                                                    "NombreCiudad": "Cartagena de Indias",
                                                    "CodigoPostal": "130001",
                                                    "NombreDepartamento": "Bolivar",
                                                    "CodigoDepartamento": "13",
                                                    "Direccion": "Calle 30 #21-164"
                                                },
                                                "TributoEmisor": {
                                                    "CodigoTributo": "01",
                                                    "NombreTributo": "IVA"
                                                },
                                                "Consorcio": [
                                                    {
                                                        "RazonSocial": "",
                                                        "Nit": "",
                                                        "DV": "",
                                                        "Regimen": "",
                                                        "CodigoTributo": "",
                                                        "NombreTributo": "",
                                                        "Porcentaje": "",
                                                        "Obligaciones": [
                                                            "O-13",
                                                            "O-23"
                                                        ]
                                                    },
                                                    {
                                                        "RazonSocial": "",
                                                        "Nit": "",
                                                        "DV": "",
                                                        "Regimen": "",
                                                        "CodigoTributo": "",
                                                        "NombreTributo": "",
                                                        "Porcentaje": "",
                                                        "Obligaciones": [
                                                            "O-13",
                                                            "O-23"
                                                        ]
                                                    }
                                                ],
                                                "Contacto": {
                                                    "Nombre": "Nombre Contacto",
                                                    "Telefono": "6642900",
                                                    "Telfax": "6642900",
                                                    "Email": "contacto@miempresa.com",
                                                    "Notas": "Encargado"
                                                }
                                            },
                                            "Cliente": {
                                                "TipoPersona": "2",
                                                "TipoRegimen": "48",
                                                "TipoIdentificacion": "13",
                                                "NumeroIdentificacion": "811922921",
                                                "DV": "",
                                                "NombreComercial": "Looney Toons",
                                                "RazonSocial": "Mi Cliente SA",
                                                "NumeroMatriculaMercantil": "90518",
                                                "PersonaNatural": {
                                                    "TipoIdentificacion": "13",
                                                    "NumeroIdentificacion": "8119229",
                                                    "PrimerNombre": "Victor",
                                                    "SegundoNombre": "Raul",
                                                    "Apellido": "Castro Mier",
                                                    "DocumentoReferencia": {
                                                        "DocReferenciaID": "",
                                                        "DocReferenciaNombre": "",
                                                        "Entidad": "",
                                                        "PaisEntidad": "",
                                                        "CodigoPaisEntidad": "",
                                                        "DocReferenciaCodigo": ""
                                                    },
                                                    "Direccion": {
                                                        "CodigoCiudad": "13001",
                                                        "NombreCiudad": "Cartagena de Indias",
                                                        "CodigoDANE": "",
                                                        "Direccion": "Calle 30 #21-164",
                                                        "NombrePais": "Colombia",
                                                        "CodigoPais": "CO"
                                                    },
                                                    "DireccionesAdicionales": [
                                                        "Mi Empresa SA",
                                                        "Mi Empresa SB"
                                                    ]
                                                },
                                                "Direccion": {
                                                    "CodigoMunicipio": "13001",
                                                    "NombreCiudad": "Cartagena de Indias",
                                                    "CodigoPostal": "130001",
                                                    "NombreDepartamento": "Bolivar",
                                                    "CodigoDepartamento": "13",
                                                    "Direccion": "Calle 30 #21-164",
                                                    "CodigoPais": "CO",
                                                    "NombrePais": "Colombia",
                                                    "IdiomaPais": "es"
                                                },
                                                "ObligacionesCliente": [
                                                    "O-13",
                                                    "O-23"
                                                ],
                                                "DireccionFiscal": {
                                                    "CodigoMunicipio": "13001",
                                                    "NombreCiudad": "Cartagena de Indias",
                                                    "CodigoPostal": "130001",
                                                    "NombreDepartamento": "Bolivar",
                                                    "CodigoDepartamento": "13",
                                                    "Direccion": "Calle 30 #21-164",
                                                    "CodigoPais": "CO",
                                                    "NombrePais": "Colombia",
                                                    "IdiomaPais": "es"
                                                },
                                                "TributoCliente": {
                                                    "CodigoTributo": "01",
                                                    "NombreTributo": "IVA"
                                                },
                                                "Contacto": {
                                                    "Nombre": "Contacto de mi cliente",
                                                    "Telefono": "5542900",
                                                    "Telfax": "5542900",
                                                    "Email": "contacto@micliente.com",
                                                    "Notas": "Encargado"
                                                },
                                                "ClientesAdicionales": [
                                                    {
                                                        "RazonSocial": "",
                                                        "NumeroIdentificacion": "",
                                                        "DV": "",
                                                        "TipoIdentificacion": "",
                                                        "NumeroMatriculaMercantil": "",
                                                        "Porcentaje": ""
                                                    },
                                                    {
                                                        "RazonSocial": "",
                                                        "NumeroIdentificacion": "",
                                                        "DV": "",
                                                        "TipoIdentificacion": "",
                                                        "NumeroMatriculaMercantil": "",
                                                        "Porcentaje": ""
                                                    }
                                                ]
                                            },
                                            "Autorizado": {
                                                "TipoIdentificacion": "31",
                                                "NumeroIdentificacion": "811922921",
                                                "DV": "5",
                                                "Nombre": "Nombre del autorizado"
                                            },
                                            "Entrega": {
                                                "FechaSalida": "2019-03-24",
                                                "HoraSalida": "06:30:00",
                                                "Direccion": {
                                                    "CodigoMunicipio": "13001",
                                                    "NombreCiudad": "Cartagena de Indias",
                                                    "CodigoPostal": "130001",
                                                    "NombreDepartamento": "Bolivar",
                                                    "CodigoDepartamento": "13",
                                                    "Direccion": "Carrera 19 #31-14",
                                                    "CodigoPais": "CO",
                                                    "NombrePais": "Colombia",
                                                    "IdiomaPais": "es"
                                                },
                                                "Transportador": {
                                                    "NombreComercial": "ENVIOS ABC",
                                                    "RazonSocial": "ENVIOS ABC",
                                                    "TipoRegimen": "48",
                                                    "TipoIdentificacion": "31",
                                                    "NumeroIdentificacion": "811922921",
                                                    "DV": "5",
                                                    "NumeroMatriculaMercantil": "458963",
                                                    "Direccion": {
                                                        "CodigoMunicipio": "13001",
                                                        "NombreCiudad": "Cartagena de Indias",
                                                        "CodigoPostal": "130001",
                                                        "NombreDepartamento": "Bolivar",
                                                        "CodigoDepartamento": "13",
                                                        "Direccion": "Carrera 19 #31-14",
                                                        "CodigoPais": "CO",
                                                        "NombrePais": "Colombia",
                                                        "IdiomaPais": "es"
                                                    },
                                                    "ObligacionesTransportador": [
                                                        "O-13",
                                                        "O-23"
                                                    ],
                                                    "DireccionFiscal": {
                                                        "CodigoMunicipio": "13001",
                                                        "NombreCiudad": "Cartagena de Indias",
                                                        "CodigoPostal": "130001",
                                                        "NombreDepartamento": "Bolivar",
                                                        "CodigoDepartamento": "13",
                                                        "Direccion": "Carrera 19 #31-14",
                                                        "CodigoPais": "CO",
                                                        "NombrePais": "Colombia",
                                                        "IdiomaPais": "es"
                                                    },
                                                    "TributoTransportador": {
                                                        "CodigoTributo": "01",
                                                        "NombreTributo": "IVA"
                                                    },
                                                    "Contacto": {
                                                        "Nombre": "Contacto de la transportadora",
                                                        "Telefono": "5542900",
                                                        "Telfax": "5542900",
                                                        "Email": "contacto@transportador.com",
                                                        "Notas": "Encargado"
                                                    }
                                                }
                                            },
                                            "TerminosEntrega": {
                                                "ID": "1",
                                                "TerminosEspeciales": "Entregado en un lugar",
                                                "Incoterms": "DAP",
                                                "DescripcionIncoterms": "El cliente pagará en efectivo"
                                            },
                                            "MediosDePago": {
                                                "CodigoMedioPago": "48",
                                                "FormaDePago": "2",
                                                "Vencimiento": "2019-06-30",
                                                "Identificador": "Efectivo",
                                                "IdentificadorPago": [
                                                    "Efectivo"
                                                ]
                                            },
                                            "TasaDeCambio": {
                                                "MonedaDestino": "",
                                                "ValorTasaDeCambio": "",
                                                "FechaTasaDeCambio": ""
                                            },
                                            "DescuentosOCargos": [
                                                {
                                                    "ID": "",
                                                    "Indicador": "True",
                                                    "CodigoDescuento": "",
                                                    "Justificacion": "cargo por intereses",
                                                    "Porcentaje": "0.00",
                                                    "Valor": "0.00",
                                                    "ValorBase": "0.00"
                                                },
                                                {
                                                    "ID": "",
                                                    "Indicador": "False",
                                                    "CodigoDescuento": "04",
                                                    "Justificacion": "envío gratis",
                                                    "Porcentaje": "0.00",
                                                    "Valor": "0.00",
                                                    "ValorBase": "0.00"
                                                }
                                            ],
                                            "Impuestos": [
                                                {
                                                    "Valor": "190.00",
                                                    "Tipo": "01",
                                                    "Nombre": "IVA",
                                                    "Redondeo": "0.00",
                                                    "Subtotal": {
                                                        "ValorBase": "1000.00",
                                                        "Valor": "190.00",
                                                        "ValorUnidMedidaBase": "",
                                                        "CodigoUnidMedidaBase": "",
                                                        "ValorTributoXUnidad": "",
                                                        "Porcentaje": "19.00"
                                                    }
                                                }
                                            ],
                                            "Totales": {
                                                "Bruto": "1000.00",
                                                "BaseImponible": "1000.00",
                                                "BrutoMasImpuestos": "1190.00",
                                                "Cargos": "0.00",
                                                "Descuentos": "0.00",
                                                "Impuestos": "190.00",
                                                "Retenciones": "0.00",
                                                "General": "1190.00",
                                                "Anticipo": "0.00",
                                                "Redondeo": "",
                                                "TotalDescuentosLineas": "0.00",
                                                "TotalCargosLineas": "0.00",
                                                "TotalOtros1": "0.00",
                                                "TotalOtros2": "0.00",
                                                "TotalReteFuente": "",
                                                "TotalReteIva": "",
                                                "TotalReteIca": ""
                                            },
                                            "Lineas": [
                                                {
                                                    "Detalle": {
                                                        "NumeroLinea": "1",
                                                        "Nota": "Notas de la linea",
                                                        "Cantidad": "1",
                                                        "UnidadMedida": "EA",
                                                        "SubTotalLinea": "1000.00",
                                                        "Descripcion": "item de la linea #1",
                                                        "CantidadXEmpaque": "1",
                                                        "Marca": "",
                                                        "NombreModelo": "",
                                                        "CantidadBase": "1",
                                                        "UnidadCantidadBase": "EA",
                                                        "PrecioUnitario": "1000",
                                                        "ValorTotalItem": "1000",
                                                        "Ocultar": "",
                                                        "Agrupador": "",
                                                        "OrdenCompra": "",
                                                        "FechaOrdenCompra": "",
                                                        "OrdenRecibo": "",
                                                        "FechaOrdenRecibo": "",
                                                        "IdentificadorUnico": "",
                                                        "CodeA": "41950504",
                                                        "CodeB": "",
                                                        "CodeC": "",
                                                        "CodeD": "",
                                                        "CodeE": "",
                                                        "CodeF": "",
                                                        "CodeG": "",
                                                        "CodeJ": "",
                                                        "AutoPostingProcCode": "WI"
                                                    },
                                                    "NotasAdicionales": [
                                                        "Unidad"
                                                    ],
                                                    "DescripcionesAdicionales": [],
                                                    "PrecioReferencia": {
                                                        "ValorArticulo": "",
                                                        "CodigoTipoPrecio": "",
                                                        "MonedaPrecioReferencia": ""
                                                    },
                                                    "Impuestos": {
                                                        "Impuesto": {
                                                            "Valor": "190.00",
                                                            "Tipo": "VAT_19_SALES",
                                                            "Nombre": "IVA",
                                                            "Redondeo": "0.00",
                                                            "Subtotal": {
                                                                "ValorBase": "1000.00",
                                                                "Valor": "190.00",
                                                                "ValorUnidMedidaBase": "",
                                                                "CodigoUnidMedidaBase": "",
                                                                "ValorTributoXUnidad": "",
                                                                "Porcentaje": "19.00"
                                                            }
                                                        }
                                                    },
                                                    "DescuentosOCargos": [],
                                                    "CodificacionVendedor": {
                                                        "CodigoArticulo": "AOHV84-225",
                                                        "CodigoExtendido": "AOHV84-225"
                                                    },
                                                    "CodificacionComprador": {
                                                        "ID": "",
                                                        "Codigo": ""
                                                    },
                                                    "CodificacionesEstandar": {
                                                        "CodificacionEstandar": {
                                                            "CodigoArticulo": "REF1250",
                                                            "CodigoEstandar": "999"
                                                        }
                                                    },
                                                    "DatosAdicionales": [],
                                                    "Mandante": {
                                                        "Nit": "",
                                                        "DV": "",
                                                        "TipoIdentificacion": ""
                                                    }
                                                }
                                            ],
                                            "Notificacion": {
                                                "Tipo": "Mail",
                                                "De": "defacture@yopmail.com",
                                                "Para": [
                                                    "recibo1@yopmail.com",
                                                    "recibo2@yopmail.com"
                                                ]
                                            },
                                            "Extensiones": {
                                                "ForeignCurrency": {
                                                    "Currency": "",
                                                    "ExchangeRate": "",
                                                    "Detalle": {
                                                        "Linea": {
                                                            "Codigo": "",
                                                            "Posicion": "",
                                                            "PrecioUnitario": "",
                                                            "SubTotalLinea": "",
                                                            "ValorTotalItem": "",
                                                            "Impuesto": {
                                                                "Subtotal": {
                                                                    "Tipo": "",
                                                                    "Porcentaje": "",
                                                                    "Valor": ""
                                                                }
                                                            },
                                                            "Descuento": {
                                                                "Porcentaje": "",
                                                                "DescuentoValor": ""
                                                            },
                                                            "Cargo": {
                                                                "Porcentaje": "",
                                                                "CargoValor": ""
                                                            }
                                                        }
                                                    },
                                                    "Totales": {
                                                        "Bruto": "",
                                                        "Base": "",
                                                        "Impuestos": "",
                                                        "Descuentos": "",
                                                        "Retenciones": "",
                                                        "Cargos": "",
                                                        "General": "",
                                                        "Anticipo": "",
                                                        "TotalIva": "",
                                                        "TotalImpoconsumo": "",
                                                        "TotalIca": "",
                                                        "TotalReteFuente": "",
                                                        "TotalReteIva": "",
                                                        "TotalReteIca": "",
                                                        "TotalBol": "",
                                                        "TotalImpOtro": ""
                                                    }
                                                },
                                                "DatosAdicionales": {
                                                    "Categoria": "",
                                                    "CampoAdicional": [
                                                        {
                                                            "Nombre": "UBL21",
                                                            "Valor": "true"
                                                        },
                                                        {
                                                            "Nombre": "ShortName",
                                                            "Valor": "Puerto_Antioquia"
                                                        }
                                                    ]
                                                },
                                                "Interoperabilidad": {
                                                    "URLAdjunto": "",
                                                    "Grupo": {
                                                        "Nombre": "",
                                                        "Categoria": {
                                                            "Nombre": "",
                                                            "CampoAdicional": []
                                                        }
                                                    }
                                                },
                                                "InformacionAdicionalRows": []
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/electronic-invoice/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Electronic Invoice"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/GetVoyageandVessel": {
            "post": {
                "operationId": "GetVoyageandVessel",
                "summary": "Get the vessel name and its corresponding voyage.",
                "description": "This is sent when a bulk visit is announced",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetVoyageandVesselDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/GetLoadByEachVessel": {
            "post": {
                "operationId": "GetLoadByEachVessel",
                "summary": "Get detailed information on the load of each Vessel. BL data from TOS.",
                "description": "When the cargo of the visit information is load inside of TOS using the WebPortal",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetLoadByEachVesselDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/SendVesselStatus": {
            "post": {
                "operationId": "SendVesselStatus",
                "summary": "",
                "description": "When de Vessel change of status to \"Arrived\" or \"Completed\"",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendVesselStatusDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/SendReceiptRecord": {
            "post": {
                "operationId": "SendReceiptRecord",
                "summary": "",
                "description": "Obtain accumulated weight in the unloading of a Vessel every x time.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendReceiptRecordDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/SendCustomsReleasedCargo": {
            "post": {
                "operationId": "SendCustomsReleasedCargo",
                "summary": "",
                "description": "Release customs blockade",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendCustomsReleasedCargoDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/GetAppointmentInformation": {
            "post": {
                "operationId": "GetAppointmentInformation",
                "summary": "",
                "description": "In the creation of the appointment",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetAppointmentInformationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/GetGateIn": {
            "post": {
                "operationId": "GetGateIn",
                "summary": "",
                "description": "Gate in PBCU",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetGateInDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/SendTruckFinalizationLoading": {
            "post": {
                "operationId": "SendTruckFinalizationLoading",
                "summary": "",
                "description": "Loading of the vehicle after door entry",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendTruckFinalizationLoadingDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/GetGateOut": {
            "post": {
                "operationId": "GetGateOut",
                "summary": "",
                "description": "PBCU reports to MIIT vehicle information and weight out.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetGateOutDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": true,
                                        "message": "Operation completed successfully",
                                        "data": [
                                            {
                                                "statusResponse": "true",
                                                "code": 200,
                                                "description": "successfull"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 200,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "success": false,
                                        "message": "Error processing endpoint",
                                        "data": [
                                            {
                                                "statusResponse": "Internal Server Error",
                                                "code": 500,
                                                "description": "Internal Server Error, check logs"
                                            }
                                        ],
                                        "timestamp": "2023-06-15T10:30:00.000Z",
                                        "localTime": "15/06/2023, 5:30:00 AM (America/Bogota)",
                                        "statusCode": 500,
                                        "uniqueRequestId": "abc123-xyz789"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/miit/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MIIT"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/mintransporte/appointment-validation": {
            "post": {
                "operationId": "appointmentValidation",
                "summary": "This method is responsible for validating the cargo manifest, as well as the vehicle and driver information.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Appointment validation request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppointmentValidationBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentValidationResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error in the query to the MinTransporte Inside service."
                    }
                },
                "tags": [
                    "MinTransporte"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/mintransporte/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "MinTransporte"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/scale-weight": {
            "post": {
                "operationId": "processScale",
                "summary": "Process scale weight",
                "description": "Process scale weight",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidationRequestScaleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResponseScaleDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResponseErrorScaleDto"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResponseErrorScaleDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scale"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            },
            "get": {
                "operationId": "getScaleById",
                "summary": "Get scale by ID",
                "description": "Get scale details using the scale identifier",
                "parameters": [
                    {
                        "name": "scale",
                        "required": true,
                        "in": "query",
                        "description": "Scale identifier: b-1",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResponseScaleIdDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResponseErrorScaleDto"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationResponseErrorScaleDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scale"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/scale-weight/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scale"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/scanner/api/v1/scanner/process-and-move": {
            "get": {
                "operationId": "processAndMoveFile",
                "summary": "Procesa todos los XML del SFTP, extrae información, mueve los archivos y los clasifica según su contenido",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Archivos procesados y movidos correctamente."
                    },
                    "500": {
                        "description": "Error al procesar o mover los archivos."
                    }
                },
                "tags": [
                    "Scanner"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/scanner/api/v1/scanner/upload": {
            "post": {
                "operationId": "uploadFile",
                "summary": "Subir un archivo al servidor",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "Archivo subido correctamente."
                    },
                    "500": {
                        "description": "Error al subir el archivo."
                    }
                },
                "tags": [
                    "Scanner"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/scanner/api/v1/scanner/read": {
            "get": {
                "operationId": "readFile",
                "summary": "Leer un archivo del servidor",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Archivo leído correctamente."
                    },
                    "500": {
                        "description": "Error al leer el archivo."
                    }
                },
                "tags": [
                    "Scanner"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/scanner/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scanner"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/super-financiera/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the super financiera service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Superfinanciera"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/super-financiera/erp-set-currency-rate": {
            "post": {
                "operationId": "setCurrencyRate",
                "summary": "Set Currency Rate",
                "description": "Sets a currency rate using the external API.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Currency rate data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "input": {
                                    "value": {
                                        "Company": "PAU001",
                                        "CurrencyType": "1",
                                        "CurrencyCode": "USD",
                                        "ValidFrom": "2024-10-26",
                                        "CurrencyRate": 4100,
                                        "ConvFactor": 1,
                                        "RefCurrencyCode": "COP"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currency rate set successfully"
                    }
                },
                "tags": [
                    "Superfinanciera"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/super-financiera/erp-update-currency-rate/{company}/{currencyType}/{currencyCode}/{validFrom}": {
            "patch": {
                "operationId": "updateCurrencyRate",
                "summary": "Update Currency Rate",
                "description": "Updates a currency rate using the external API.",
                "parameters": [
                    {
                        "name": "company",
                        "required": true,
                        "in": "path",
                        "description": "Company code (e.g., PAU001)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyType",
                        "required": true,
                        "in": "path",
                        "description": "Currency type (e.g., 1)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "required": true,
                        "in": "path",
                        "description": "Currency code (e.g., USD)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "validFrom",
                        "required": true,
                        "in": "path",
                        "description": "Valid from date (e.g., 2024-10-26)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Updated currency rate data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            },
                            "examples": {
                                "input": {
                                    "value": {
                                        "CurrencyRate": 4050
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currency rate updated successfully"
                    }
                },
                "tags": [
                    "Superfinanciera"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/super-financiera/get-today-trm": {
            "get": {
                "operationId": "getTodayTrm",
                "summary": "Get Today's TRM",
                "description": "Fetches the current TRM (Tasa Representativa del Mercado) for today using the external API.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "TRM retrieved successfully"
                    }
                },
                "tags": [
                    "Superfinanciera"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "post": {
                "operationId": "create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            },
            "patch": {
                "operationId": "update",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "delete": {
                "operationId": "remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/users/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/vuce/report-sae": {
            "post": {
                "operationId": "reportSae",
                "summary": "Send to the authorities the SAE for full export containers. ",
                "description": "Reports SAE information to the VUCE.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Report SAE input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportSaeInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportSaeOutput"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "VUCE"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/vuce/send-inspection-location-and-times": {
            "post": {
                "operationId": "sendInspectionLocationAndTimes",
                "summary": "Get the export full container with selectivity for inspection.",
                "description": "Send Inspection location and times to the VUCE.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Send Inspection location and times input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendInspectionLocationAndTimesInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendInspectionLocationAndTimesOutput"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "VUCE"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/vuce/send-gatein-general-cargo": {
            "post": {
                "operationId": "sendGateInGeneralCargo",
                "summary": "Send GateIn General Cargo",
                "description": "Send GateIn General Cargo to the VUCE.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Send GateIn General Cargo input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendGateInGeneralCargoInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendGateInGeneralCargoOutput"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "VUCE"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/vuce/send-stuffing-schedule": {
            "post": {
                "operationId": "sendStuffingSchedule",
                "summary": "Send Stuffing Schedule",
                "description": "Send Stuffing Schedule to the VUCE.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Send Stuffing Schedule input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendStuffingScheduleInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendStuffingScheduleOutput"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "VUCE"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/vuce/send-stuffed-containers": {
            "post": {
                "operationId": "sendStuffedContainers",
                "summary": "Send Stuffed Containers",
                "description": "Send Stuffed Containers to the VUCE.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "description": "Send Stuffed Containers input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendStuffedContainersBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendStuffedContainersResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "VUCE"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/vuce/force-scheduling-orchestrator": {
            "post": {
                "operationId": "forceSchedulingOrchestrator",
                "summary": "Force scheduling orchestrator execution",
                "description": "Manually trigger the scheduling orchestrator process",
                "parameters": [
                    {
                        "name": "X-Mock-Mode",
                        "required": false,
                        "in": "header",
                        "description": "Enable mock mode for testing (true/false)",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "VUCE"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        },
        "/api/v1/vuce/health": {
            "get": {
                "operationId": "healthCheck",
                "summary": "Health check",
                "description": "Check the health of the service.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "VUCE"
                ],
                "security": [
                    {
                        "JWT-auth": []
                    }
                ]
            }
        }
    },
    "info": {
        "title": "Middleware Service API",
        "description": "API for managing integrations with TOS, VUCE, MinTransport, DIAN, etc.",
        "version": "0.0.13",
        "contact": {}
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Operations related to Authentication"
        },
        {
            "name": "Access Control",
            "description": "Operations related to Access Control"
        },
        {
            "name": "Cafeteros",
            "description": "Operations related to Cafeteros"
        },
        {
            "name": "DIAN",
            "description": "Operations related to DIAN"
        },
        {
            "name": "Electronic Invoice",
            "description": "Operations related to Electronic Invoice"
        },
        {
            "name": "Email",
            "description": "Operations related to Email"
        },
        {
            "name": "Email Groups",
            "description": "Operations related to Email Groups"
        },
        {
            "name": "MIIT",
            "description": "Operations related to MIIT"
        },
        {
            "name": "MinTransporte",
            "description": "Operations related to MinTransporte"
        },
        {
            "name": "oAuth2 Authentication",
            "description": "Operations related to oAuth2 Authentication"
        },
        {
            "name": "Scale",
            "description": "Operations related to Scale"
        },
        {
            "name": "Scanner",
            "description": "Operations related to Scanner"
        },
        {
            "name": "Superfinanciera",
            "description": "Operations related to Superfinanciera"
        },
        {
            "name": "Users",
            "description": "Operations related to Users"
        },
        {
            "name": "VUCE",
            "description": "Operations related to VUCE"
        }
    ],
    "servers": [],
    "components": {
        "securitySchemes": {
            "JWT-auth": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http",
                "name": "JWT",
                "description": "Enter JWT token",
                "in": "header"
            }
        },
        "schemas": {
            "StandardResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "description": "An array containing the response data",
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            },
            "VerifyIDSocialBody": {
                "type": "object",
                "properties": {
                    "cedula": {
                        "type": "string",
                        "description": "Número de cédula",
                        "example": "123456789"
                    }
                },
                "required": [
                    "cedula"
                ]
            },
            "EmailTemplate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the email template",
                        "example": "welcome-email"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The subject line of the email",
                        "example": "Welcome to our platform!"
                    },
                    "body": {
                        "type": "string",
                        "description": "The body content of the email template",
                        "example": "Hello {{name}}, welcome to our platform..."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the template is active",
                        "default": true
                    },
                    "lastModified": {
                        "format": "date-time",
                        "type": "string",
                        "description": "The date and time the template was last modified",
                        "example": "2024-01-01T00:00:00.000Z"
                    }
                },
                "required": [
                    "name",
                    "subject",
                    "body",
                    "active",
                    "lastModified"
                ]
            },
            "CreateEmailGroupDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Nombre del grupo de correos",
                        "example": "TRM Notifications"
                    },
                    "description": {
                        "type": "string",
                        "description": "Descripción del grupo de correos",
                        "example": "Grupo para notificaciones relacionadas con la TRM"
                    },
                    "emails": {
                        "description": "Lista de correos electrónicos",
                        "example": [
                            "correo1@ejemplo.com",
                            "correo2@ejemplo.com"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Estado del grupo (activo/inactivo)",
                        "default": true
                    },
                    "templateId": {
                        "type": "string",
                        "description": "ID de la plantilla de correo asociada",
                        "example": "6759f2d00ca2ae1eb71c6979"
                    },
                    "process": {
                        "type": "string",
                        "description": "Proceso asociado al grupo de correos",
                        "enum": [
                            "AUTH",
                            "TRM",
                            "VUCE",
                            "MINTRANSPORTE",
                            "DIAN",
                            "MIIT",
                            "SIIS",
                            "TOS",
                            "USERS",
                            "ACCESS_CONTROL",
                            "SCANNER",
                            "SCALEWEIGHT",
                            "EMAIL",
                            "EMAILGROUPS",
                            "CAFETEROS",
                            "ELECTRONIC_INVOICE",
                            "OAUTH2"
                        ],
                        "example": "TRM"
                    },
                    "state": {
                        "type": "string",
                        "description": "Estado del servicio",
                        "enum": [
                            "ERROR",
                            "SUCCESS",
                            "PENDING"
                        ],
                        "example": "SUCCESS"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "emails",
                    "active",
                    "templateId",
                    "process",
                    "state"
                ]
            },
            "OAuth2CredentialsDto": {
                "type": "object",
                "properties": {
                    "tokenUrl": {
                        "type": "string",
                        "description": "OAuth2 token URL",
                        "example": "https://otm-demo.cyberlogitec.com/mtos/oauth/token"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "OAuth2 client ID",
                        "example": "OTM:REST_API"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "OAuth2 client secret",
                        "example": "restfulapisecret"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username for authentication",
                        "example": "DAVID"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for authentication",
                        "example": "CavaloAzul"
                    }
                },
                "required": [
                    "tokenUrl",
                    "clientId",
                    "clientSecret",
                    "username",
                    "password"
                ]
            },
            "TokenResponseDto": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "example": "O6erJNDGgK9rH8Gca9-kdVzxa5U",
                        "description": "Token de acceso OAuth2"
                    },
                    "token_type": {
                        "type": "string",
                        "example": "bearer",
                        "description": "Tipo de token"
                    },
                    "refresh_token": {
                        "type": "string",
                        "example": "M4hahJ1wh51NWXxW7XTPN-3Eqpc",
                        "description": "Token de actualización"
                    },
                    "scope": {
                        "type": "string",
                        "example": "read write trust",
                        "description": "Alcance del token"
                    }
                },
                "required": [
                    "access_token",
                    "token_type",
                    "refresh_token",
                    "scope"
                ]
            },
            "AuthDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email address",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password",
                        "minLength": 6,
                        "example": "password123"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "RequestPayloadDto": {
                "type": "object",
                "properties": {
                    "idBascula": {
                        "type": "string",
                        "example": "2"
                    },
                    "usuario": {
                        "type": "string",
                        "example": "Daniel"
                    },
                    "fecha": {
                        "type": "string",
                        "example": "2025-02-19",
                        "description": "Date in YYYY-MM-DD format"
                    },
                    "numeroMaterial": {
                        "type": "string",
                        "example": "61008478"
                    },
                    "numeroEntrega": {
                        "type": "string",
                        "example": ""
                    },
                    "bodega": {
                        "type": "string",
                        "example": "BODEGA_1"
                    },
                    "cantidadSacos": {
                        "type": "string",
                        "example": "225"
                    },
                    "clavePais": {
                        "type": "string",
                        "example": "3"
                    },
                    "codigoExportador": {
                        "type": "string",
                        "example": "0325"
                    },
                    "numeroLote": {
                        "type": "string",
                        "example": "00453"
                    },
                    "observaciones": {
                        "type": "string",
                        "example": "Café de exportación del Quindío con la más alta calidad"
                    },
                    "sacosRecibidos": {
                        "type": "string",
                        "example": "225"
                    },
                    "pesoEstibas": {
                        "type": "string",
                        "example": "1537.98"
                    },
                    "cantidadEstibas": {
                        "type": "string",
                        "example": "2"
                    },
                    "pesoBrutoCafeSinEstibas": {
                        "type": "string",
                        "example": "1512.26"
                    },
                    "kilosBrutosPorCafe": {
                        "type": "string",
                        "example": "80"
                    },
                    "taraEmpaque": {
                        "type": "string",
                        "example": "0.12"
                    },
                    "kilosNetosCafe": {
                        "type": "string",
                        "example": "1510.12"
                    },
                    "placa": {
                        "type": "string",
                        "example": "THS049"
                    },
                    "planillaBodega": {
                        "type": "string",
                        "example": "A13-3 SPB"
                    },
                    "procedencia": {
                        "type": "string",
                        "example": "PITALITO"
                    },
                    "guiaTransito": {
                        "type": "string",
                        "example": "9000075602"
                    },
                    "agenteDeAduanas": {
                        "type": "string",
                        "example": "LOGICER SAS"
                    },
                    "empresaTransportadora": {
                        "type": "string",
                        "example": "Transportes Campaz SAS."
                    },
                    "anioCafetero": {
                        "type": "string",
                        "example": "5"
                    },
                    "opciones1": {
                        "type": "string",
                        "example": "Café"
                    }
                },
                "required": [
                    "idBascula",
                    "usuario",
                    "fecha",
                    "numeroMaterial",
                    "numeroEntrega",
                    "bodega",
                    "cantidadSacos",
                    "clavePais",
                    "codigoExportador",
                    "numeroLote",
                    "observaciones",
                    "sacosRecibidos",
                    "pesoEstibas",
                    "cantidadEstibas",
                    "pesoBrutoCafeSinEstibas",
                    "kilosBrutosPorCafe",
                    "taraEmpaque",
                    "kilosNetosCafe",
                    "placa",
                    "planillaBodega",
                    "procedencia",
                    "guiaTransito",
                    "agenteDeAduanas",
                    "empresaTransportadora",
                    "anioCafetero",
                    "opciones1"
                ]
            },
            "ResponseHeaderDto": {
                "type": "object",
                "properties": {
                    "activeRecord": {
                        "type": "number",
                        "description": "Identificador de página activa en caso de paginación",
                        "example": 0
                    },
                    "finalMessage": {
                        "type": "boolean",
                        "description": "Indicador de página final",
                        "example": true
                    },
                    "processMessage": {
                        "type": "string",
                        "description": "Mensaje del proceso",
                        "example": "Operacion realizada exitosamente"
                    },
                    "requestID": {
                        "type": "string",
                        "description": "Identificador de la petición del sistema origen",
                        "example": "11221122"
                    },
                    "responseCode": {
                        "type": "number",
                        "description": "Código de la respuesta del servicio",
                        "example": 4
                    },
                    "responseMessage": {
                        "type": "string",
                        "description": "Mensaje de respuesta dado por el servicio",
                        "example": "Documento creado correctamente"
                    }
                },
                "required": [
                    "activeRecord",
                    "finalMessage",
                    "processMessage",
                    "requestID",
                    "responseCode",
                    "responseMessage"
                ]
            },
            "WeighingReturnDto": {
                "type": "object",
                "properties": {
                    "documentNumber": {
                        "type": "string",
                        "description": "Número de documento",
                        "example": "11221122"
                    }
                },
                "required": [
                    "documentNumber"
                ]
            },
            "ResponseBodyDto": {
                "type": "object",
                "properties": {
                    "weighingReturn": {
                        "description": "Datos del pesaje",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeighingReturnDto"
                            }
                        ]
                    }
                },
                "required": [
                    "weighingReturn"
                ]
            },
            "WeighingToSAPResponseDto": {
                "type": "object",
                "properties": {
                    "responseHeader": {
                        "$ref": "#/components/schemas/ResponseHeaderDto"
                    },
                    "responseBody": {
                        "$ref": "#/components/schemas/ResponseBodyDto"
                    }
                },
                "required": [
                    "responseHeader",
                    "responseBody"
                ]
            },
            "WeighingToSAPOutputDto": {
                "type": "object",
                "properties": {
                    "weighingReturn": {
                        "$ref": "#/components/schemas/WeighingToSAPResponseDto"
                    }
                },
                "required": [
                    "weighingReturn"
                ]
            },
            "ResponseType": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "description": "An array containing the response data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeighingToSAPOutputDto"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            },
            "TosFinalizeVesselRequestDto": {
                "type": "object",
                "properties": {
                    "numFormulario": {
                        "type": "number",
                        "description": "Form Number",
                        "example": 116575014788258
                    },
                    "fechaHoraFinalizacion": {
                        "type": "string",
                        "description": "Finalize",
                        "example": "20240826122828",
                        "maxLength": 20
                    },
                    "visitNbr": {
                        "type": "string",
                        "description": "Visit Number",
                        "example": "123456789",
                        "maxLength": 20
                    }
                },
                "required": [
                    "numFormulario",
                    "fechaHoraFinalizacion",
                    "visitNbr"
                ]
            },
            "TosFinalizeVesselResponseDto": {
                "type": "object",
                "properties": {}
            },
            "UnidadDto": {
                "type": "object",
                "properties": {
                    "codEstadoContenedor": {
                        "type": "number",
                        "description": "Container status code",
                        "example": 1
                    },
                    "numContenedor": {
                        "type": "string",
                        "description": "Container number",
                        "example": "CONT-001"
                    },
                    "tamanoContenedor": {
                        "type": "string",
                        "description": "Container size",
                        "example": "20FT"
                    },
                    "tipoContenedor": {
                        "type": "string",
                        "description": "Container type",
                        "example": "Refrigerated"
                    },
                    "sello1": {
                        "type": "string",
                        "description": "Container seal 1",
                        "example": "SEAL-001"
                    },
                    "codigoCargaPeligrosa": {
                        "type": "string",
                        "description": "Hazardous cargo code",
                        "example": "IMDG-123"
                    },
                    "polReportadoNaviero": {
                        "type": "string",
                        "description": "Origin port reported by the shipping line",
                        "example": "POL-001"
                    },
                    "fpodReportadoNaviero": {
                        "type": "string",
                        "description": "Final destination port reported by the shipping line",
                        "example": "FPOD-001"
                    }
                },
                "required": [
                    "codEstadoContenedor",
                    "numContenedor",
                    "tamanoContenedor",
                    "tipoContenedor",
                    "sello1",
                    "codigoCargaPeligrosa",
                    "polReportadoNaviero",
                    "fpodReportadoNaviero"
                ]
            },
            "UnidadCargaRecibidaDto": {
                "type": "object",
                "properties": {
                    "CodTipoDocumentoViaje": {
                        "type": "number",
                        "description": "Type of travel document",
                        "example": 1
                    },
                    "numDocumentoTransporte": {
                        "type": "number",
                        "description": "Transport document number",
                        "example": 123456
                    },
                    "fechaDocumentoTransporte": {
                        "type": "string",
                        "description": "Transport document date",
                        "example": "2024-10-10"
                    },
                    "codTipoCarga": {
                        "type": "number",
                        "description": "Cargo type code",
                        "example": 1
                    },
                    "pesoBrutoKg": {
                        "type": "number",
                        "description": "Gross weight in kilograms",
                        "example": 1500
                    },
                    "cantidadBultos": {
                        "type": "string",
                        "description": "Number of packages",
                        "example": "5"
                    },
                    "agenteCargaConsignatario": {
                        "type": "string",
                        "description": "Cargo agent or consignee",
                        "example": "Agent XYZ"
                    },
                    "unidades": {
                        "description": "Received cargo units",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnidadDto"
                        }
                    }
                },
                "required": [
                    "CodTipoDocumentoViaje",
                    "numDocumentoTransporte",
                    "fechaDocumentoTransporte",
                    "codTipoCarga",
                    "pesoBrutoKg",
                    "cantidadBultos",
                    "agenteCargaConsignatario",
                    "unidades"
                ]
            },
            "ContenedorVacioDto": {
                "type": "object",
                "properties": {
                    "codEstadoContenedor": {
                        "type": "number",
                        "description": "Empty container status code",
                        "example": 1
                    },
                    "numContenedor": {
                        "type": "string",
                        "description": "Empty container number",
                        "example": "EMPTY-CONT-001"
                    }
                },
                "required": [
                    "codEstadoContenedor",
                    "numContenedor"
                ]
            },
            "DinformeDetallesCargarecibidaDto": {
                "type": "object",
                "properties": {
                    "cargoType": {
                        "type": "string",
                        "description": "Cargo type",
                        "example": "CC",
                        "enum": [
                            "CC",
                            "CG",
                            "CS",
                            "CR"
                        ]
                    },
                    "numManifiesto": {
                        "type": "number",
                        "description": "Manifest number",
                        "example": 789456
                    },
                    "numFormatoAnterior": {
                        "type": "number",
                        "description": "Previous format number",
                        "example": 654321
                    },
                    "numeroRecaladaTerminal": {
                        "type": "string",
                        "description": "Terminal recaladas number",
                        "example": "REC-123"
                    },
                    "nombreMotonave": {
                        "type": "string",
                        "description": "Vessel name",
                        "example": "Vessel XYZ"
                    },
                    "linea": {
                        "type": "string",
                        "description": "Transport line",
                        "example": "Line 001"
                    },
                    "podReportadoNaviero": {
                        "type": "string",
                        "description": "Destination port reported by the shipping line",
                        "example": "POD-001"
                    },
                    "unidadesCargaRecibida": {
                        "description": "Received cargo units",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnidadCargaRecibidaDto"
                        }
                    },
                    "contenedoresVacios": {
                        "description": "Empty containers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContenedorVacioDto"
                        }
                    }
                },
                "required": [
                    "cargoType",
                    "numManifiesto",
                    "numFormatoAnterior",
                    "numeroRecaladaTerminal",
                    "nombreMotonave",
                    "linea",
                    "podReportadoNaviero",
                    "unidadesCargaRecibida",
                    "contenedoresVacios"
                ]
            },
            "RequestArimCargoFromTosDto": {
                "type": "object",
                "properties": {
                    "cargoType": {
                        "type": "string",
                        "description": "CC: Container cargo, CG: General Cargo, CS: Bulk Cargo, CR: Ro Ro Cargo",
                        "example": "CC"
                    },
                    "numeroRetiroCarga": {
                        "type": "string",
                        "description": "Visit Number",
                        "example": "1054921789"
                    },
                    "numeroManifiestoCarga": {
                        "type": "number",
                        "description": "Manifest number",
                        "example": 122343434
                    },
                    "numeroDocumentoTransporte": {
                        "type": "string",
                        "description": "Transport document number",
                        "example": "HLCUJK1231137808"
                    },
                    "estadoAduaneroCarga": {
                        "type": "string",
                        "description": "Customs status of the cargo",
                        "example": "1"
                    },
                    "depositoDestino": {
                        "type": "string",
                        "description": "Destination deposit",
                        "example": "1"
                    },
                    "cantidadBultos": {
                        "type": "number",
                        "description": "Number of packages",
                        "example": 10
                    },
                    "pesoCarga": {
                        "type": "number",
                        "description": "Weight of the cargo",
                        "example": 2000.5
                    },
                    "empresaSolicitaRetiro": {
                        "type": "string",
                        "description": "Company requesting the withdrawal",
                        "example": "Example Logistics Inc."
                    },
                    "numeroContenedor": {
                        "type": "string",
                        "description": "Container number",
                        "example": "HLBU9080850"
                    },
                    "tamanoContenedor": {
                        "type": "string",
                        "description": "Container size",
                        "example": "20"
                    },
                    "tipoContenedor": {
                        "type": "string",
                        "description": "Type of container",
                        "example": "Dry"
                    },
                    "sello1": {
                        "type": "string",
                        "description": "Seal number of the container",
                        "example": "HLC1278835"
                    }
                },
                "required": [
                    "cargoType",
                    "numeroRetiroCarga",
                    "numeroManifiestoCarga",
                    "numeroDocumentoTransporte",
                    "estadoAduaneroCarga",
                    "depositoDestino",
                    "cantidadBultos",
                    "pesoCarga",
                    "empresaSolicitaRetiro",
                    "numeroContenedor",
                    "tamanoContenedor",
                    "tipoContenedor",
                    "sello1"
                ]
            },
            "IncomeEntryNoticeDto": {
                "type": "object",
                "properties": {
                    "numFormatoIngresoZP": {
                        "type": "number",
                        "description": "Port Zone Entry Format Number",
                        "example": 116277000409311
                    },
                    "numIdentificacionMedioTransporteRealIngresado": {
                        "type": "string",
                        "description": "Identification number of the actual transport medium entered",
                        "example": ""
                    }
                },
                "required": [
                    "numFormatoIngresoZP",
                    "numIdentificacionMedioTransporteRealIngresado"
                ]
            },
            "FacturaONotaCreditoDto": {
                "type": "object",
                "properties": {}
            },
            "SendInvoiceDto": {
                "type": "object",
                "properties": {
                    "isSuccess": {
                        "type": "boolean",
                        "description": "Indicates if the operation was successful.",
                        "example": true
                    },
                    "requestId": {
                        "type": "string",
                        "description": "Unique request identifier.",
                        "example": "invoice-request-id-12345"
                    },
                    "UUID": {
                        "type": "string",
                        "description": "CUFE (Unique Code of Electronic Invoicing).",
                        "example": "cufe-unique-code-1234567890abcdef"
                    },
                    "documentNumber": {
                        "type": "string",
                        "description": "Document number of the invoice.",
                        "example": "INV-001234"
                    },
                    "LDF": {
                        "type": "string",
                        "description": "LDF, description of the UBL document.",
                        "example": "FACTURA-UBL(123456789;INV-001234;2024-09-28;PRINCIPAL;PRINCIPAL)"
                    },
                    "URL": {
                        "type": "string",
                        "description": "URL to view the generated invoice.",
                        "example": "https://example.com/invoice/viewer"
                    }
                },
                "required": [
                    "isSuccess",
                    "requestId",
                    "UUID",
                    "documentNumber",
                    "LDF",
                    "URL"
                ]
            },
            "TosToIFSInputDto": {
                "type": "object",
                "properties": {}
            },
            "GetVoyageandVesselDto": {
                "type": "object",
                "properties": {
                    "voyage": {
                        "type": "string",
                        "description": "Voyage identifier",
                        "example": "VOY2024001",
                        "maxLength": 30
                    },
                    "vesselName": {
                        "type": "string",
                        "description": "Name of the vessel",
                        "example": "EVER GIVEN",
                        "maxLength": 30
                    },
                    "vesselVoyage": {
                        "type": "string",
                        "description": "Vessel voyage identifier",
                        "example": "VSLVOY2024001",
                        "maxLength": 30
                    },
                    "eta": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Estimated Time of Arrival (ETA)",
                        "example": "2024-11-07T15:30:00Z"
                    },
                    "etd": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Estimated Time of Departure (ETD)",
                        "example": "2024-11-07T18:30:00Z"
                    }
                },
                "required": [
                    "voyage",
                    "vesselName",
                    "vesselVoyage",
                    "eta",
                    "etd"
                ]
            },
            "GetLoadByEachVesselDto": {
                "type": "object",
                "properties": {
                    "voyage": {
                        "type": "string",
                        "description": "Voyage identifier",
                        "example": "VOY2024001",
                        "maxLength": 30
                    },
                    "noBL": {
                        "type": "string",
                        "description": "Bill of Lading (BL) number from TOS",
                        "example": "BL123456789012"
                    },
                    "customer": {
                        "type": "string",
                        "description": "Customer from TOS",
                        "example": "CUSTOMER COMPANY NAME"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product code or name",
                        "example": "PRODUCT-123456789",
                        "maxLength": 50
                    },
                    "weightBl": {
                        "type": "number",
                        "description": "Weight of the BL in tons",
                        "example": 12345.67
                    }
                },
                "required": [
                    "voyage",
                    "noBL",
                    "customer",
                    "product",
                    "weightBl"
                ]
            },
            "SendVesselStatusDto": {
                "type": "object",
                "properties": {
                    "voyage": {
                        "type": "string",
                        "description": "Voyage identifier",
                        "example": "VOY2024001",
                        "maxLength": 10
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the vessel",
                        "example": "Arrived or Completed"
                    }
                },
                "required": [
                    "voyage",
                    "status"
                ]
            },
            "SendReceiptRecordDto": {
                "type": "object",
                "properties": {
                    "voyage": {
                        "type": "string",
                        "description": "Voyage identifier",
                        "example": "VOY2024001"
                    },
                    "idTransaction": {
                        "type": "string",
                        "description": "Transaction identifier",
                        "example": "12345"
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product identifier",
                        "example": "PROD001"
                    },
                    "receiptWeight": {
                        "type": "number",
                        "description": "Receipt weight in kilograms",
                        "example": 1000.5
                    },
                    "DateTimeEnd": {
                        "format": "date-time",
                        "type": "string",
                        "description": "End date and time of the operation",
                        "example": "2024-03-15T14:30:00Z"
                    },
                    "weighingPit": {
                        "type": "number",
                        "description": "Weighing pit identifier",
                        "example": 1
                    }
                },
                "required": [
                    "voyage",
                    "idTransaction",
                    "productId",
                    "receiptWeight",
                    "DateTimeEnd",
                    "weighingPit"
                ]
            },
            "SendCustomsReleasedCargoStatus": {
                "type": "string",
                "description": "Current status of the vessel load",
                "enum": [
                    "Release",
                    "Apply"
                ]
            },
            "SendCustomsReleasedCargoDto": {
                "type": "object",
                "properties": {
                    "voyage": {
                        "type": "string",
                        "description": "Vessel visit identifier from TOS",
                        "example": "VOY2024001"
                    },
                    "noBl": {
                        "type": "string",
                        "description": "Bill of Lading (BL) number in the TOS",
                        "example": "BL123456789"
                    },
                    "customer": {
                        "type": "string",
                        "description": "Customer name",
                        "example": "CUSTOMER COMPANY NAME"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product identifier",
                        "example": "PRODUCT-123",
                        "maxLength": 30
                    },
                    "weightBl": {
                        "type": "number",
                        "description": "Weight of the BL",
                        "example": 1234.56
                    },
                    "status": {
                        "example": "Release",
                        "$ref": "#/components/schemas/SendCustomsReleasedCargoStatus"
                    }
                },
                "required": [
                    "voyage",
                    "noBl",
                    "customer",
                    "product",
                    "weightBl",
                    "status"
                ]
            },
            "GetAppointmentInformationDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "number",
                        "description": "Status of the transport",
                        "example": 1
                    },
                    "dateTimeStart": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Start date and time",
                        "example": "2024-03-15T14:30:00"
                    },
                    "dateTimeEnd": {
                        "format": "date-time",
                        "type": "string",
                        "description": "End date and time",
                        "example": "2024-03-15T15:30:00"
                    },
                    "transportId": {
                        "type": "string",
                        "description": "Transport identifier",
                        "example": "TRANS123",
                        "maxLength": 30
                    },
                    "driverId": {
                        "type": "string",
                        "description": "Driver identifier",
                        "example": "DRV123",
                        "maxLength": 30
                    },
                    "driverName": {
                        "type": "string",
                        "description": "Driver name",
                        "example": "John Doe",
                        "maxLength": 50
                    },
                    "truckPlate": {
                        "type": "string",
                        "description": "Truck plate number",
                        "example": "ABC123",
                        "maxLength": 15
                    },
                    "maxWeightPermitted": {
                        "type": "number",
                        "description": "Maximum weight permitted",
                        "example": 1000
                    },
                    "noBl": {
                        "type": "string",
                        "description": "Bill of Lading number in the TOS",
                        "example": "BL123456789"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product identifier",
                        "example": "PROD-123",
                        "maxLength": 30
                    },
                    "voyage": {
                        "type": "string",
                        "description": "Vessel voyage from TOS",
                        "example": "VOY2024001"
                    },
                    "weightRequired": {
                        "type": "number",
                        "description": "Weight required",
                        "example": 500
                    },
                    "destinationCode": {
                        "type": "number",
                        "description": "Destination code",
                        "example": 1
                    }
                },
                "required": [
                    "status",
                    "dateTimeStart",
                    "dateTimeEnd",
                    "transportId",
                    "driverId",
                    "driverName",
                    "truckPlate",
                    "maxWeightPermitted",
                    "noBl",
                    "product",
                    "voyage",
                    "weightRequired",
                    "destinationCode"
                ]
            },
            "GetGateInDto": {
                "type": "object",
                "properties": {
                    "truckPlate": {
                        "type": "string",
                        "description": "Truck plate number",
                        "example": "ABC123",
                        "maxLength": 15
                    },
                    "arriveDateTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Arrival date and time",
                        "example": "2024-03-15T14:30:00"
                    },
                    "arriveWeight": {
                        "type": "number",
                        "description": "Arrival weight in tons",
                        "example": 12345.67
                    },
                    "maxWeightPermitted": {
                        "type": "number",
                        "description": "Maximum weight permitted",
                        "example": 50000
                    },
                    "truckTransaction": {
                        "type": "number",
                        "description": "Truck transaction identifier",
                        "example": 123456
                    },
                    "weighingBridgeId": {
                        "type": "number",
                        "description": "Weighing bridge identifier",
                        "example": 1
                    }
                },
                "required": [
                    "truckPlate",
                    "arriveDateTime",
                    "arriveWeight",
                    "maxWeightPermitted",
                    "truckTransaction",
                    "weighingBridgeId"
                ]
            },
            "SendTruckFinalizationLoadingDto": {
                "type": "object",
                "properties": {
                    "truckPlate": {
                        "type": "string",
                        "description": "Truck plate number",
                        "example": "ABC123",
                        "maxLength": 15
                    },
                    "weighingPitId": {
                        "type": "number",
                        "description": "Weighing pit measurement",
                        "example": 12345.67
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight measurement",
                        "example": 1000
                    },
                    "truckTransaction": {
                        "type": "number",
                        "description": "Truck transaction identifier",
                        "example": 123456
                    }
                },
                "required": [
                    "truckPlate",
                    "weighingPitId",
                    "weight",
                    "truckTransaction"
                ]
            },
            "GetGateOutDto": {
                "type": "object",
                "properties": {
                    "departureDateTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Departure date and time",
                        "example": "2024-03-15T14:30:00"
                    },
                    "truckPlate": {
                        "type": "string",
                        "description": "Truck plate number",
                        "example": "ABC123",
                        "maxLength": 15
                    },
                    "truckGrossWeight": {
                        "type": "number",
                        "description": "Truck gross weight",
                        "example": 12345.67
                    },
                    "cargoWeight": {
                        "type": "number",
                        "description": "Cargo weight",
                        "example": 5000
                    },
                    "truckTransaction": {
                        "type": "number",
                        "description": "Truck transaction identifier",
                        "example": 123456
                    },
                    "weightBridgeId": {
                        "type": "number",
                        "description": "Weight bridge identifier",
                        "example": 1
                    }
                },
                "required": [
                    "departureDateTime",
                    "truckPlate",
                    "truckGrossWeight",
                    "cargoWeight",
                    "truckTransaction",
                    "weightBridgeId"
                ]
            },
            "ValidationType": {
                "type": "string",
                "description": "Validation type identifier",
                "enum": [
                    "Create",
                    "Appointment",
                    "Gate In"
                ]
            },
            "AppointmentValidationBody": {
                "type": "object",
                "properties": {
                    "validationType": {
                        "example": "Create",
                        "$ref": "#/components/schemas/ValidationType"
                    },
                    "truck": {
                        "type": "string",
                        "description": "Truck license plate",
                        "example": "USB101"
                    },
                    "driver": {
                        "type": "string",
                        "description": "Driver identification",
                        "example": "123456789"
                    },
                    "manifestNbr": {
                        "type": "number",
                        "description": "Entry Id (IdManifest)",
                        "example": "95200330"
                    },
                    "truckCompanyId": {
                        "type": "string",
                        "description": "Truck company ID (with verification digit)",
                        "example": "8001009456"
                    },
                    "appointmentDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Appointment date",
                        "example": "2023-05-15"
                    },
                    "classCargo": {
                        "type": "string",
                        "description": "Type of cargo",
                        "example": "Import",
                        "enum": [
                            "Import",
                            "Export",
                            "Mixed"
                        ]
                    }
                },
                "required": [
                    "validationType",
                    "driver",
                    "truckCompanyId",
                    "appointmentDate",
                    "classCargo"
                ]
            },
            "AppointmentValidationResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "description": "An array containing the response data",
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            },
            "ValidationRequestScaleDto": {
                "type": "object",
                "properties": {
                    "driverIdentification": {
                        "type": "string",
                        "example": "100283937494",
                        "description": "Driver identification number"
                    }
                },
                "required": [
                    "driverIdentification"
                ]
            },
            "ValidationResponseScaleDto": {
                "type": "object",
                "properties": {
                    "driverIdentification": {
                        "type": "string",
                        "example": "100283937494",
                        "description": "Driver identification number"
                    },
                    "stableWeight": {
                        "type": "string",
                        "example": "213.3",
                        "description": "Stable weight"
                    },
                    "date": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-07-19T14:00:00.000Z",
                        "description": "Date"
                    },
                    "scaleIdentification": {
                        "type": "string",
                        "example": "b-1",
                        "description": "Scale identification"
                    },
                    "tmlCd": {
                        "type": "string",
                        "example": "PBCU",
                        "description": "Port identification"
                    }
                },
                "required": [
                    "driverIdentification",
                    "stableWeight",
                    "date",
                    "scaleIdentification",
                    "tmlCd"
                ]
            },
            "ValidationResponseErrorScaleDto": {
                "type": "object",
                "properties": {
                    "date": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-07-19T14:00:00.000Z",
                        "description": "Date"
                    },
                    "message": {
                        "type": "string",
                        "example": {
                            "SERVICE_UNAVAILABLE": "Scale cannot be connected before 3 attempts",
                            "NOT_FOUND": "Scale not found or not available"
                        },
                        "description": "Message errors"
                    }
                },
                "required": [
                    "date",
                    "message"
                ]
            },
            "ValidationResponseScaleIdDto": {
                "type": "object",
                "properties": {
                    "statusResponse": {
                        "type": "boolean",
                        "example": true,
                        "description": "Status response"
                    },
                    "code": {
                        "type": "number",
                        "example": 200,
                        "description": "Status code"
                    },
                    "stableWeight": {
                        "type": "string",
                        "example": "213.3Kg",
                        "description": "Stable weight"
                    },
                    "date": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-07-19T14:00:00.000Z",
                        "description": "Date"
                    },
                    "message": {
                        "type": "string",
                        "example": {
                            "SERVICE_UNAVAILABLE": "Scale cannot be connected before 3 attempts",
                            "NOT_FOUND": "Scale not found or not available",
                            "FOUND": "Scale  found "
                        },
                        "description": "Message"
                    },
                    "description": {
                        "type": "object",
                        "example": {
                            "host": "172.20.180.50",
                            "port": "4321",
                            "identification": "b-1"
                        },
                        "description": "Scale identification"
                    }
                },
                "required": [
                    "statusResponse",
                    "code",
                    "stableWeight",
                    "date",
                    "message",
                    "description"
                ]
            },
            "CreateUserDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email address",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password",
                        "minLength": 6,
                        "example": "password123"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "UpdateUserDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password",
                        "minLength": 6,
                        "example": "password123"
                    },
                    "id": {
                        "type": "string",
                        "description": "User ID",
                        "example": "507f1f77bcf86cd799439011"
                    },
                    "currentPassword": {
                        "type": "string",
                        "description": "Current user password",
                        "minLength": 6,
                        "example": "currentPass123"
                    },
                    "newPassword": {
                        "type": "string",
                        "description": "New user password",
                        "minLength": 6,
                        "example": "newPass123"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "ReportSaeInput": {
                "type": "object",
                "properties": {
                    "sae": {
                        "type": "string",
                        "description": "SAE number",
                        "maxLength": 20,
                        "example": "SAE123456789"
                    },
                    "container": {
                        "type": "string",
                        "description": "Container number",
                        "maxLength": 12,
                        "example": "CONT123456"
                    },
                    "sticker": {
                        "type": "string",
                        "description": "Sticker code",
                        "maxLength": 35,
                        "example": "STICKER123"
                    },
                    "seals": {
                        "type": "string",
                        "description": "Seal numbers",
                        "maxLength": 35,
                        "example": "SEAL123,SEAL456"
                    },
                    "idCarga": {
                        "type": "string",
                        "description": "Cargo ID",
                        "maxLength": 10,
                        "example": "CARGO123"
                    },
                    "boardingPlaceCode": {
                        "type": "string",
                        "description": "Boarding place code",
                        "maxLength": 12,
                        "example": "PBCU"
                    },
                    "vesselName": {
                        "type": "string",
                        "description": "Vessel name",
                        "maxLength": 128,
                        "example": "Vessel Example"
                    },
                    "visitNbr": {
                        "type": "string",
                        "description": "Visit number",
                        "maxLength": 32,
                        "example": "VISIT123"
                    },
                    "truckCompany": {
                        "type": "string",
                        "description": "Truck company name",
                        "maxLength": 255,
                        "example": "Truck Company Ltd."
                    },
                    "truckLicence": {
                        "type": "string",
                        "description": "Truck license plate",
                        "maxLength": 30,
                        "example": "TRK123"
                    },
                    "driverName": {
                        "type": "string",
                        "description": "Driver name",
                        "maxLength": 255,
                        "example": "John Doe"
                    },
                    "driverId": {
                        "type": "number",
                        "description": "Driver ID number",
                        "maxLength": 12,
                        "example": 1234567890
                    },
                    "isoCode": {
                        "type": "string",
                        "description": "ISO code",
                        "maxLength": 12,
                        "example": "ISO1234"
                    },
                    "numFormatoIngresoZP": {
                        "type": "string",
                        "description": "ZP entry format number",
                        "maxLength": 20,
                        "example": "ZP123456"
                    }
                },
                "required": [
                    "sae",
                    "container",
                    "sticker",
                    "seals",
                    "idCarga",
                    "boardingPlaceCode",
                    "vesselName",
                    "visitNbr",
                    "truckCompany",
                    "truckLicence",
                    "driverName",
                    "driverId",
                    "isoCode",
                    "numFormatoIngresoZP"
                ]
            },
            "ReportSaeOutput": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "type": "array",
                        "description": "Array of DIAN forms",
                        "items": {
                            "type": "object",
                            "properties": {
                                "dianForm": {
                                    "type": "string",
                                    "description": "DIAN form",
                                    "maxLength": 20,
                                    "example": "DIAN12345678901234"
                                }
                            }
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            },
            "SendInspectionLocationAndTimesInput": {
                "type": "object",
                "properties": {
                    "boardingPlaceCode": {
                        "type": "string",
                        "description": "Boarding place code",
                        "maxLength": 4,
                        "example": "PBCU"
                    },
                    "dateTimeInspection": {
                        "type": "string",
                        "description": "Date and time of inspection",
                        "example": "2023-05-15 14:30:00"
                    },
                    "cargoType": {
                        "type": "string",
                        "description": "Cargo type",
                        "maxLength": 20,
                        "example": "CONTAINER"
                    },
                    "container": {
                        "type": "string",
                        "description": "Container number",
                        "maxLength": 12,
                        "example": "CONT1234567"
                    },
                    "remarks": {
                        "type": "string",
                        "description": "Remarks",
                        "maxLength": 500,
                        "example": "Additional information about the inspection"
                    },
                    "inspectionPlaceCode": {
                        "type": "string",
                        "description": "Inspection place code",
                        "maxLength": 4,
                        "example": "123"
                    }
                },
                "required": [
                    "boardingPlaceCode",
                    "dateTimeInspection",
                    "cargoType",
                    "container",
                    "remarks",
                    "inspectionPlaceCode"
                ]
            },
            "SendInspectionLocationAndTimesOutput": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "description": "Result",
                        "example": [
                            {
                                "result": "EXITOSO",
                                "resultCause": "Inspection location and times sent successfully"
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            },
            "SendGateInGeneralCargoInput": {
                "type": "object",
                "properties": {
                    "serviceNbr": {
                        "type": "string",
                        "description": "Service number",
                        "maxLength": 12,
                        "example": "SVC123456789"
                    },
                    "shippingLine": {
                        "type": "string",
                        "description": "Shipping line",
                        "maxLength": 255,
                        "example": "Maersk Line"
                    },
                    "vessel": {
                        "type": "string",
                        "description": "Vessel name",
                        "maxLength": 128,
                        "example": "EVER GIVEN"
                    },
                    "visitNbr": {
                        "type": "string",
                        "description": "Visit number",
                        "maxLength": 128,
                        "example": "VISIT123456"
                    },
                    "cargoId": {
                        "type": "string",
                        "description": "Cargo ID",
                        "maxLength": 20,
                        "example": "CARGO123456"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight in tons",
                        "example": 25.5
                    },
                    "sae": {
                        "type": "string",
                        "description": "SAE number",
                        "maxLength": 20,
                        "example": "SAE123456789"
                    },
                    "truckCompany": {
                        "type": "string",
                        "description": "Truck company",
                        "maxLength": 255,
                        "example": "ABC Trucking Co."
                    },
                    "truckLicense": {
                        "type": "string",
                        "description": "Truck license plate",
                        "maxLength": 30,
                        "example": "ABC123"
                    },
                    "driverName": {
                        "type": "string",
                        "description": "Driver name",
                        "maxLength": 255,
                        "example": "John Doe"
                    },
                    "driverId": {
                        "type": "string",
                        "description": "Driver ID",
                        "maxLength": 12,
                        "example": "123456789"
                    },
                    "boardingPlaceCode": {
                        "type": "string",
                        "description": "Boarding place code",
                        "maxLength": 10,
                        "example": "BORD123"
                    }
                },
                "required": [
                    "serviceNbr",
                    "shippingLine",
                    "vessel",
                    "visitNbr",
                    "cargoId",
                    "weight",
                    "sae",
                    "truckCompany",
                    "truckLicense",
                    "driverName",
                    "driverId",
                    "boardingPlaceCode"
                ]
            },
            "SendGateInGeneralCargoOutput": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "type": "array",
                        "description": "Array of response data",
                        "items": {
                            "type": "object",
                            "properties": {
                                "receivedInfoDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2023-05-15T14:30:00Z"
                                },
                                "result": {
                                    "type": "string",
                                    "example": "EXITOSO"
                                },
                                "resultCause": {
                                    "type": "string",
                                    "example": "Información de ingreso de carga general recibida correctamente"
                                }
                            }
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            },
            "SendStuffingScheduleInput": {
                "type": "object",
                "properties": {
                    "boardingPlaceCode": {
                        "type": "string",
                        "description": "Boarding place code",
                        "maxLength": 10,
                        "example": "PBCU"
                    },
                    "dateTimeInspection": {
                        "type": "string",
                        "description": "Date and time of inspection",
                        "example": "2023-05-15 14:30:00"
                    },
                    "operationType": {
                        "type": "string",
                        "description": "Operation type",
                        "maxLength": 20,
                        "example": "STUFFING"
                    },
                    "programmingTime": {
                        "type": "string",
                        "description": "Programming time",
                        "example": "T14:30:00"
                    },
                    "programmingDate": {
                        "type": "string",
                        "description": "Programming date",
                        "example": "2023-05-15"
                    },
                    "programmingNbr": {
                        "type": "string",
                        "description": "Programming number",
                        "maxLength": 20,
                        "example": "PROG123456"
                    },
                    "inspectionPlaceCode": {
                        "type": "string",
                        "description": "Inspection place code",
                        "maxLength": 4,
                        "example": "INSP"
                    },
                    "consecutiveStuffing": {
                        "type": "number",
                        "description": "Consecutive stuffing",
                        "example": 1
                    },
                    "update": {
                        "type": "string",
                        "description": "Update flag",
                        "enum": [
                            "S",
                            "N"
                        ],
                        "example": "S"
                    },
                    "reschedule": {
                        "type": "string",
                        "description": "Reschedule flag",
                        "enum": [
                            "S",
                            "N"
                        ],
                        "example": "N"
                    }
                },
                "required": [
                    "boardingPlaceCode",
                    "dateTimeInspection",
                    "operationType",
                    "programmingTime",
                    "programmingDate",
                    "programmingNbr",
                    "inspectionPlaceCode",
                    "consecutiveStuffing",
                    "update",
                    "reschedule"
                ]
            },
            "SendStuffingScheduleOutput": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "description": "Result",
                        "example": [
                            {
                                "result": "EXITOSO",
                                "resultCause": "Programación de llenado registrada correctamente"
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            },
            "ServiceNumber": {
                "type": "object",
                "properties": {
                    "serviceNbr": {
                        "type": "number",
                        "description": "Service number",
                        "example": 123456
                    },
                    "loaded": {
                        "type": "string",
                        "description": "Loaded",
                        "enum": [
                            "SI",
                            "NO"
                        ],
                        "example": "SI"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason",
                        "maxLength": 4,
                        "example": "RSN1"
                    }
                },
                "required": [
                    "serviceNbr",
                    "loaded",
                    "reason"
                ]
            },
            "SendStuffedContainersBody": {
                "type": "object",
                "properties": {
                    "programmingNbr": {
                        "type": "string",
                        "description": "Programming number",
                        "maxLength": 20,
                        "example": "PROG123456"
                    },
                    "consecutiveStuffing": {
                        "type": "number",
                        "description": "Consecutive stuffing",
                        "example": 1
                    },
                    "seals": {
                        "type": "string",
                        "description": "Seals",
                        "maxLength": 35,
                        "example": "SEAL123456"
                    },
                    "container": {
                        "type": "string",
                        "description": "Container",
                        "maxLength": 12,
                        "example": "CONT123456"
                    },
                    "serviceNbrs": {
                        "description": "Service numbers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServiceNumber"
                        }
                    }
                },
                "required": [
                    "programmingNbr",
                    "consecutiveStuffing",
                    "seals",
                    "container",
                    "serviceNbrs"
                ]
            },
            "SendStuffedContainersResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true,
                        "description": "Indicates if the operation was successful"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully",
                        "description": "A message describing the result of the operation"
                    },
                    "data": {
                        "description": "Result",
                        "example": [
                            {
                                "result": "EXITOSO",
                                "resultCause": "Contenedor registrado correctamente"
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "array",
                            "maxLength": 255
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "2023-06-15T10:30:00.000Z",
                        "description": "ISO 8601 timestamp of the response"
                    },
                    "localTime": {
                        "type": "string",
                        "example": "15/06/2023, 5:30:00 AM (America/Bogota)",
                        "description": "Local time in Colombia"
                    },
                    "statusCode": {
                        "type": "number",
                        "example": 200,
                        "description": "HTTP status code of the response"
                    },
                    "uniqueRequestId": {
                        "type": "string",
                        "example": "abc123-xyz789",
                        "description": "Unique identifier for the request"
                    }
                },
                "required": [
                    "success",
                    "message",
                    "data",
                    "timestamp",
                    "localTime",
                    "statusCode",
                    "uniqueRequestId"
                ]
            }
        }
    }
}
